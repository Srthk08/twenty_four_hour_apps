---
import Layout from './Layout.astro';
import Toast from '../components/Toast.astro';

export interface Props {
  title: string;
  description?: string;
}

const { title, description } = Astro.props;
---

<Layout title={title} description={description}>
    <!-- Hide user navbar in menu operator panel -->
    <style>
      /* Hide the main header/navbar when in menu operator panel */
      header {
        display: none !important;
        visibility: hidden !important;
        opacity: 0 !important;
        height: 0 !important;
        max-height: 0 !important;
        overflow: hidden !important;
        position: absolute !important;
        top: -9999px !important;
        left: -9999px !important;
        z-index: -9999 !important;
        pointer-events: none !important;
        transform: translateY(-100vh) !important;
        transition: none !important;
        animation: none !important;
      }
      
      /* Also hide any footer */
      footer {
        display: none !important;
        visibility: hidden !important;
        opacity: 0 !important;
        height: 0 !important;
        max-height: 0 !important;
        overflow: hidden !important;
        position: absolute !important;
        top: -9999px !important;
        left: -9999px !important;
        z-index: -9999 !important;
        pointer-events: none !important;
        transform: translateY(-100vh) !important;
        transition: none !important;
        animation: none !important;
      }
      
      /* Ensure menu operator panel takes full height */
      .menu-operator-panel-container {
        min-height: 100vh;
        margin-top: 0 !important;
        padding-top: 0 !important;
      }
      
      /* Prevent any navbar flicker during transitions */
      body.menu-operator-panel-active header,
      body.menu-operator-panel-active footer {
        display: none !important;
        visibility: hidden !important;
        opacity: 0 !important;
        height: 0 !important;
        max-height: 0 !important;
        overflow: hidden !important;
        position: absolute !important;
        top: -9999px !important;
        left: -9999px !important;
        z-index: -9999 !important;
        pointer-events: none !important;
        transform: translateY(-100vh) !important;
        transition: none !important;
        animation: none !important;
      }
      
      /* Additional CSS to ensure complete hiding */
      html body header,
      html body footer {
        display: none !important;
        visibility: hidden !important;
        opacity: 0 !important;
        height: 0 !important;
        max-height: 0 !important;
        overflow: hidden !important;
        position: absolute !important;
        top: -9999px !important;
        left: -9999px !important;
        z-index: -9999 !important;
        pointer-events: none !important;
        transform: translateY(-100vh) !important;
        transition: none !important;
        animation: none !important;
      }
      
      /* Additional protection for any navbar elements */
      body.menu-operator-panel-active header * {
        display: none !important;
        visibility: hidden !important;
        opacity: 0 !important;
        height: 0 !important;
        max-height: 0 !important;
        overflow: hidden !important;
        pointer-events: none !important;
      }
    </style>
    
    <!-- Immediate navbar hiding - runs before page load -->
    <script>
      // Hide navbar immediately - runs before DOM is ready
      (function() {
        // Add menu operator panel class immediately
        document.documentElement.classList.add('menu-operator-panel-active');
        document.body.classList.add('menu-operator-panel-active');
        
        // Hide navbar immediately
        function hideNavbarImmediately() {
          const header = document.querySelector('header');
          if (header) {
            header.style.display = 'none';
            header.style.visibility = 'hidden';
            header.style.opacity = '0';
            header.style.height = '0';
            header.style.maxHeight = '0';
            header.style.overflow = 'hidden';
            header.style.position = 'absolute';
            header.style.top = '-9999px';
            header.style.left = '-9999px';
            header.style.zIndex = '-9999';
            header.style.pointerEvents = 'none';
            header.style.transform = 'translateY(-100vh)';
            header.style.transition = 'none';
            header.style.animation = 'none';
          }
        }
        
        // Hide navbar immediately
        hideNavbarImmediately();
        
        // Also hide on DOM ready
        if (document.readyState === 'loading') {
          document.addEventListener('DOMContentLoaded', hideNavbarImmediately);
        } else {
          hideNavbarImmediately();
        }
        
        // Hide on window load
        window.addEventListener('load', hideNavbarImmediately);
        
        // Hide on any state change
        window.addEventListener('popstate', hideNavbarImmediately);
        
        // Continuous hiding
        setInterval(hideNavbarImmediately, 100);
      })();
    </script>
    
    <!-- Menu Operator Panel Container -->
    <div class="menu-operator-panel-container bg-gray-50">
      <!-- Menu Operator Header -->
      <header class="bg-white shadow-sm border-b border-gray-200">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex justify-between items-center py-4">
            <!-- Logo and Title -->
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <div class="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
                  <span class="text-white font-bold text-sm">MO</span>
                </div>
              </div>
              <div class="ml-3">
                <h1 class="text-xl font-semibold text-gray-900">Menu Operator</h1>
                <p class="text-sm text-gray-500">Dashboard</p>
              </div>
            </div>
            
            <!-- Navigation and User Info -->
            <div class="flex items-center space-x-4">
              <!-- Back to Site Button -->
              <a href="/" class="flex items-center space-x-2 px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                <span>Back to Site</span>
              </a>
              
              <!-- Profile Dropdown -->
              <div class="relative" x-data="{ open: false }">
                <button 
                  @click="open = !open"
                  class="flex items-center space-x-3 p-2 text-sm rounded-lg hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-200"
                >
                  <div class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center shadow-sm">
                    <span id="menu-operator-avatar" class="text-white font-medium text-sm">MO</span>
                  </div>
                  <div class="text-right">
                    <p class="text-sm font-medium text-gray-900" id="user-name">Loading...</p>
                    <p class="text-xs text-gray-500" id="user-role">Menu Operator</p>
                  </div>
                  <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                  </svg>
                </button>

                 <div 
                   x-show="open"
                   x-transition:enter="transition ease-out duration-100"
                   x-transition:enter-start="transform opacity-0 scale-95"
                   x-transition:enter-end="transform opacity-100 scale-100"
                   x-transition:leave="transition ease-in duration-75"
                   x-transition:leave-start="transform opacity-100 scale-100"
                   x-transition:leave-end="transform opacity-0 scale-95"
                   @click.away="open = false"
                   class="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-xl py-2 z-50 border border-gray-200"
                 >
                   <a href="/profile" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-200">
                     <div class="flex items-center">
                       <div class="w-4 h-4 mr-2 bg-gray-600 rounded-full flex items-center justify-center">
                         <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                           <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                         </svg>
                       </div>
                       Profile
                     </div>
                   </a>
                   <hr class="my-2 border-gray-200">
                   <button id="logout-btn" class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors duration-200">
                     <div class="flex items-center">
                       <div class="w-4 h-4 mr-2 bg-red-600 rounded flex items-center justify-center">
                         <svg class="w-3 h-3 text-white" fill="currentColor" viewBox="0 0 24 24">
                           <path d="M17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5zM4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4V5z"/>
                         </svg>
                       </div>
                       Sign out
                     </div>
                   </button>
                 </div>
              </div>
            </div>
          </div>
        </div>
      </header>

      <!-- Main Content -->
      <main class="max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8">
        <slot />
      </main>
    </div>

    <!-- Toast Component -->
    <Toast />

    <!-- Alpine.js for dropdown functionality -->
    <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
    
    <!-- Immediate script to hide navbar -->
    <script>
      // Hide navbar immediately - runs before DOM is ready
      (function() {
        // Add body class immediately
        if (document.body) {
          document.body.classList.add('menu-operator-panel-active');
        } else {
          // If body doesn't exist yet, wait for it
          const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
              if (mutation.type === 'childList' && document.body) {
                document.body.classList.add('menu-operator-panel-active');
                observer.disconnect();
              }
            });
          });
          observer.observe(document.documentElement, { childList: true });
        }
        
        // Also hide navbar elements immediately if they exist
        const hideNavbarElements = () => {
          const header = document.querySelector('header');
          const footer = document.querySelector('footer');
          
          if (header) {
            header.style.display = 'none';
            header.style.visibility = 'hidden';
            header.style.opacity = '0';
            header.style.height = '0';
            header.style.maxHeight = '0';
            header.style.overflow = 'hidden';
            header.style.position = 'absolute';
            header.style.top = '-9999px';
            header.style.left = '-9999px';
            header.style.zIndex = '-9999';
            header.style.pointerEvents = 'none';
            header.style.transform = 'translateY(-100vh)';
          }
          
          if (footer) {
            footer.style.display = 'none';
            footer.style.visibility = 'hidden';
            footer.style.opacity = '0';
            footer.style.height = '0';
            footer.style.maxHeight = '0';
            footer.style.overflow = 'hidden';
            footer.style.position = 'absolute';
            footer.style.top = '-9999px';
            footer.style.left = '-9999px';
            footer.style.zIndex = '-9999';
            footer.style.pointerEvents = 'none';
            footer.style.transform = 'translateY(-100vh)';
          }
        };
        
        // Try to hide immediately
        hideNavbarElements();
        
        // Also try when DOM is ready
        if (document.readyState === 'loading') {
          document.addEventListener('DOMContentLoaded', hideNavbarElements);
        } else {
          hideNavbarElements();
        }
      })();
    </script>
    
    <!-- Menu Operator Panel Scripts -->
    <script>
      import { createClient } from '@supabase/supabase-js';

      // Supabase configuration
      const supabaseUrl = 'YOUR_SUPABASE_URL';
      const supabaseKey = 'YOUR_SUPABASE_ANON_KEY';
      const supabase = createClient(supabaseUrl, supabaseKey);

      // Initialize menu operator panel
      document.addEventListener('DOMContentLoaded', async () => {
        // Immediately add body class to hide main navbar
        document.body.classList.add('menu-operator-panel-active');
        
        await loadUserInfo();
        setupEventListeners();
      });

      // Also add the class immediately when script loads
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
          document.body.classList.add('menu-operator-panel-active');
        });
      } else {
        document.body.classList.add('menu-operator-panel-active');
      }

      // Load user information
      async function loadUserInfo() {
        try {
          const { data: { user } } = await supabase.auth.getUser();
          if (!user) {
            window.location.href = '/login';
            return;
          }

          // Get user profile
          const { data: profile, error } = await supabase
            .from('profiles')
            .select('full_name, email, role')
            .eq('id', user.id)
            .single();

          if (profile) {
            document.getElementById('user-name').textContent = profile.full_name || user.email;
            document.getElementById('user-role').textContent = profile.role || 'Menu Operator';
            
            // Set avatar initial
            const avatar = document.getElementById('menu-operator-avatar');
            if (avatar && profile.full_name) {
              avatar.textContent = profile.full_name.charAt(0).toUpperCase();
            } else if (avatar && user.email) {
              avatar.textContent = user.email.charAt(0).toUpperCase();
            }
          } else {
            document.getElementById('user-name').textContent = user.email;
            const avatar = document.getElementById('menu-operator-avatar');
            if (avatar) {
              avatar.textContent = user.email.charAt(0).toUpperCase();
            }
          }
        } catch (error) {
          console.error('Error loading user info:', error);
        }
      }

      // Setup event listeners
      function setupEventListeners() {
        // Logout button
        document.getElementById('logout-btn').addEventListener('click', async () => {
          if (confirm('Are you sure you want to logout?')) {
            await supabase.auth.signOut();
            window.location.href = '/login';
          }
        });
        
        // Handle "Back to Site" navigation
        const backToSiteLinks = document.querySelectorAll('a[href="/"]');
        backToSiteLinks.forEach(link => {
          link.addEventListener('click', (e) => {
            console.log('🔄 Menu Operator clicked "Back to Site" - preparing to show user navbar');
            
            // Remove menu operator panel class
            document.body.classList.remove('menu-operator-panel-active');
            document.documentElement.classList.remove('menu-operator-panel-active');
            
            // Small delay to prevent flicker
            setTimeout(() => {
              if (window.showUserNavbar) {
                window.showUserNavbar();
                console.log('✅ User navbar shown after delay');
              }
            }, 50);
          });
        });
      }
    </script>
</Layout>
