---
// Google Authentication Component
---

<div class="google-auth-container">
  <div class="auth-buttons">
    <button id="google-signin-btn" class="google-btn">
      <svg class="google-icon" viewBox="0 0 24 24" width="20" height="20">
        <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
        <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
        <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
        <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
      </svg>
      <span>Continue with Google</span>
    </button>
    
    <div class="divider">
      <span>or</span>
    </div>
    
    <button id="google-signup-btn" class="google-btn signup">
      <svg class="google-icon" viewBox="0 0 24 24" width="20" height="20">
        <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
        <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
        <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
        <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
      </svg>
      <span>Sign up with Google</span>
    </button>
  </div>
  
  <div id="auth-status" class="auth-status hidden"></div>
</div>

<style>
  .google-auth-container {
    width: 100%;
    max-width: 400px;
    margin: 0 auto;
  }

  .auth-buttons {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .google-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
    width: 100%;
    padding: 0.75rem 1rem;
    border: 2px solid #e5e7eb;
    border-radius: 0.5rem;
    background: white;
    color: #374151;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
  }

  .google-btn:hover {
    border-color: #d1d5db;
    background: #f9fafb;
    transform: translateY(-1px);
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }

  .google-btn:active {
    transform: translateY(0);
  }

  .google-btn.signup {
    background: #4285f4;
    border-color: #4285f4;
    color: white;
  }

  .google-btn.signup:hover {
    background: #3367d6;
    border-color: #3367d6;
  }

  .google-icon {
    flex-shrink: 0;
  }

  .divider {
    display: flex;
    align-items: center;
    text-align: center;
    color: #6b7280;
    font-size: 0.875rem;
    margin: 0.5rem 0;
  }

  .divider::before,
  .divider::after {
    content: '';
    flex: 1;
    height: 1px;
    background: #e5e7eb;
  }

  .divider span {
    padding: 0 1rem;
    background: white;
  }

  .auth-status {
    margin-top: 1rem;
    padding: 0.75rem;
    border-radius: 0.5rem;
    text-align: center;
    font-size: 0.875rem;
  }

  .auth-status.success {
    background: #d1fae5;
    color: #065f46;
    border: 1px solid #a7f3d0;
  }

  .auth-status.error {
    background: #fee2e2;
    color: #991b1b;
    border: 1px solid #fca5a5;
  }

  .auth-status.loading {
    background: #dbeafe;
    color: #1e40af;
    border: 1px solid #93c5fd;
  }

  .hidden {
    display: none;
  }

  @media (max-width: 640px) {
    .google-btn {
      padding: 0.875rem 1rem;
      font-size: 0.875rem;
    }
  }
</style>

<script>
  import { createClient } from '@supabase/supabase-js';

  // Supabase configuration
  const SUPABASE_URL = 'https://lmrrdcaavwwletcjcpqv.supabase.co';
  const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxtcnJkY2Fhdnd3bGV0Y2pjcHF2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU1MDQ0ODgsImV4cCI6MjA3MTA4MDQ4OH0.AU59Qfr6K9i880Gcn5y-3pjCf8PXsDIq4OI0-lPQVuQ';
  
  const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

  // Get DOM elements
  const signinBtn = document.getElementById('google-signin-btn');
  const signupBtn = document.getElementById('google-signup-btn');
  const authStatus = document.getElementById('auth-status');

  // Show status message
  function showStatus(message, type = 'info') {
    authStatus.textContent = message;
    authStatus.className = `auth-status ${type}`;
    authStatus.classList.remove('hidden');
    
    if (type === 'success') {
      setTimeout(() => {
        authStatus.classList.add('hidden');
      }, 3000);
    }
  }

  // Handle Google authentication
  async function handleGoogleAuth(isSignup = false) {
    try {
      showStatus('Connecting to Google...', 'loading');
      
      const { data, error } = await supabase.auth.signInWithOAuth({
        provider: 'google',
        options: {
          redirectTo: `${window.location.origin}/auth/callback`,
          queryParams: {
            access_type: 'offline',
            prompt: 'consent',
          }
        }
      });

      if (error) {
        console.error('Google auth error:', error);
        showStatus(`Authentication failed: ${error.message}`, 'error');
        return;
      }

      showStatus('Redirecting to Google...', 'loading');
      
    } catch (err) {
      console.error('Google auth error:', err);
      showStatus(`Authentication failed: ${err.message}`, 'error');
    }
  }

  // Handle Google user data sync
  async function syncGoogleUser(user) {
    try {
      const { data, error } = await supabase.rpc('sync_google_user', {
        p_google_id: user.user_metadata.provider_id,
        p_email: user.email,
        p_name: user.user_metadata.full_name,
        p_picture: user.user_metadata.avatar_url,
        p_provider_id: user.user_metadata.provider_id
      });

      if (error) {
        console.error('Sync error:', error);
        return;
      }

      console.log('Google user synced:', data);
      return data;
    } catch (err) {
      console.error('Sync error:', err);
    }
  }

  // Event listeners
  signinBtn?.addEventListener('click', () => handleGoogleAuth(false));
  signupBtn?.addEventListener('click', () => handleGoogleAuth(true));

  // Listen for auth state changes
  supabase.auth.onAuthStateChange(async (event, session) => {
    if (event === 'SIGNED_IN' && session?.user) {
      const user = session.user;
      
      if (user.app_metadata.provider === 'google') {
        showStatus('Syncing Google account...', 'loading');
        await syncGoogleUser(user);
        showStatus('Successfully signed in with Google!', 'success');
        
        // Redirect to dashboard or home page
        setTimeout(() => {
          window.location.href = '/dashboard';
        }, 1500);
      }
    } else if (event === 'SIGNED_OUT') {
      showStatus('Signed out successfully', 'success');
    }
  });

  // Check if user is already signed in
  supabase.auth.getSession().then(({ data: { session } }) => {
    if (session?.user) {
      showStatus('Already signed in', 'success');
    }
  });
</script>
