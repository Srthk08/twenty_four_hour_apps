---
import Layout from '../../layouts/Layout.astro';
import { createClient } from '@supabase/supabase-js';

// Supabase configuration
const SUPABASE_URL = 'https://lmrrdcaavwwletcjcpqv.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxtcnJkY2Fhdnd3bGV0Y2pjcHF2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU1MDQ0ODgsImV4cCI6MjA3MTA4MDQ4OH0.AU59Qfr6K9i880Gcn5y-3pjCf8PXsDIq4OI0-lPQVuQ';

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

// Handle the OAuth callback
let authResult = null;
let error = null;

try {
  const { data, error: authError } = await supabase.auth.getSession();
  
  if (authError) {
    error = authError.message;
  } else if (data.session) {
    authResult = data.session;
  }
} catch (err) {
  error = err.message;
}
---

<Layout title="Authentication Callback">
  <main class="min-h-screen flex items-center justify-center bg-gray-50">
    <div class="max-w-md w-full space-y-8">
      <div class="text-center">
        <h2 class="mt-6 text-3xl font-extrabold text-gray-900">
          {error ? 'Authentication Error' : 'Processing Authentication...'}
        </h2>
        <p class="mt-2 text-sm text-gray-600">
          {error ? 'There was an error with your authentication.' : 'Please wait while we complete your sign-in.'}
        </p>
      </div>

      <div class="mt-8 space-y-6">
        {error ? (
          <div class="bg-red-50 border border-red-200 rounded-md p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800">Authentication Failed</h3>
                <div class="mt-2 text-sm text-red-700">
                  <p>{error}</p>
                </div>
              </div>
            </div>
          </div>
        ) : (
          <div class="bg-blue-50 border border-blue-200 rounded-md p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="animate-spin h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-blue-800">Processing...</h3>
                <div class="mt-2 text-sm text-blue-700">
                  <p>Setting up your account and redirecting...</p>
                </div>
              </div>
            </div>
          </div>
        )}

        <div class="flex space-x-4">
          <a href="/login" class="flex-1 bg-indigo-600 text-white text-center py-2 px-4 rounded-md hover:bg-indigo-700 transition duration-150 ease-in-out">
            Back to Login
          </a>
          <a href="/" class="flex-1 bg-gray-600 text-white text-center py-2 px-4 rounded-md hover:bg-gray-700 transition duration-150 ease-in-out">
            Go Home
          </a>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  import { createClient } from '@supabase/supabase-js';

  const SUPABASE_URL = 'https://lmrrdcaavwwletcjcpqv.supabase.co';
  const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxtcnJkY2Fhdnd3bGV0Y2pjcHF2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU1MDQ0ODgsImV4cCI6MjA3MTA4MDQ4OH0.AU59Qfr6K9i880Gcn5y-3pjCf8PXsDIq4OI0-lPQVuQ';
  
  const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

  // Handle the OAuth callback
  async function handleAuthCallback() {
    try {
      const { data, error } = await supabase.auth.getSession();
      
      if (error) {
        console.error('Auth callback error:', error);
        return;
      }

      if (data.session?.user) {
        const user = data.session.user;
        
        // Check if this is a Google user
        if (user.app_metadata.provider === 'google') {
          console.log('Google user authenticated:', user);
          
          // Sync user data with our database
          try {
            const { data: syncResult, error: syncError } = await supabase.rpc('sync_google_user', {
              p_google_id: user.user_metadata.provider_id,
              p_email: user.email,
              p_name: user.user_metadata.full_name,
              p_picture: user.user_metadata.avatar_url,
              p_provider_id: user.user_metadata.provider_id
            });

            if (syncError) {
              console.error('Sync error:', syncError);
            } else {
              console.log('User synced successfully:', syncResult);
            }
          } catch (syncErr) {
            console.error('Sync error:', syncErr);
          }
        }

        // Redirect to dashboard
        setTimeout(() => {
          window.location.href = '/dashboard';
        }, 2000);
      }
    } catch (err) {
      console.error('Callback error:', err);
    }
  }

  // Run the callback handler
  handleAuthCallback();

  // Listen for auth state changes
  supabase.auth.onAuthStateChange((event, session) => {
    if (event === 'SIGNED_IN' && session?.user) {
      console.log('User signed in:', session.user);
      
      // Redirect to dashboard
      setTimeout(() => {
        window.location.href = '/dashboard';
      }, 1000);
    }
  });
</script>
