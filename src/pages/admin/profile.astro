---
import AdminLayout from '../../layouts/AdminLayout.astro';
---

<AdminLayout title="Admin Profile - DevExpress">
    <div class="space-y-6">
      <!-- Page Header -->
      <div class="mb-8">

        <!-- Back Button -->
        <div class="mb-4">
          <button 
            onclick="goBackToAdminDashboard()" 
            class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200"
          >
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
            Back to Admin Dashboard
          </button>
        </div>
        
        <h1 class="text-3xl font-bold text-gray-900">Admin Profile</h1>
        <p class="text-gray-600 mt-2">Manage your admin account settings and view your activity</p>
      </div>

      <!-- Profile Header Card -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center space-x-6">
          <!-- Avatar -->
          <div class="flex-shrink-0">
            <div id="admin-avatar-large" class="w-20 h-20 bg-blue-600 rounded-full flex items-center justify-center text-white text-2xl font-bold">
              A
            </div>
          </div>
          
          <!-- Profile Info -->
          <div class="flex-1">
            <h2 id="admin-display-name" class="text-2xl font-bold text-gray-900">Admin User</h2>
            <p id="admin-display-email" class="text-gray-600">admin@example.com</p>
            <div class="flex items-center space-x-4 mt-2">
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                </svg>
                Administrator
              </span>
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                </svg>
                Active
              </span>
            </div>
          </div>
          
        </div>
      </div>

      <!-- Profile Information -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Profile Information</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
            <p id="admin-full-name" class="text-sm text-gray-900">No data</p>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Email</label>
            <p id="admin-email" class="text-sm text-gray-900">No data</p>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Role</label>
            <p id="admin-role" class="text-sm text-gray-900">Admin</p>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Member Since</label>
            <p id="admin-created-at" class="text-sm text-gray-900">Loading...</p>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Last Login</label>
            <p id="admin-last-login" class="text-sm text-gray-900">Loading...</p>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-1">Status</label>
            <span class="inline-flex px-2 py-1 text-xs font-medium rounded-full bg-green-100 text-green-800">
              Active
            </span>
          </div>
        </div>
      </div>

      <!-- Quick Stats -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                </svg>
              </div>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-600">Orders Managed</p>
              <p id="orders-managed" class="text-2xl font-semibold text-gray-900">0</p>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
                </svg>
              </div>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-600">Users Managed</p>
              <p id="users-managed" class="text-2xl font-semibold text-gray-900">0</p>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </div>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-600">Tickets Resolved</p>
              <p id="tickets-resolved" class="text-2xl font-semibold text-gray-900">0</p>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
                <svg class="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                </svg>
              </div>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-gray-600">Contact Forms</p>
              <p id="contact-forms" class="text-2xl font-semibold text-gray-900">0</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Recent Activity -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Recent Activity</h3>
        <div id="recent-activity" class="space-y-4">
          <!-- Recent activity will be populated here -->
        </div>
      </div>
    </div>

</AdminLayout>

<script>
  // Supabase configuration
  const SUPABASE_URL = 'https://lmrrdcaavwwletcjcpqv.supabase.co';
  const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxtcnJkY2Fhdnd3bGV0Y2pjcHF2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU1MDQ0ODgsImV4cCI6MjA3MTA4MDQ4OH0.AU59Qfr6K9i880Gcn5y-3pjCf8PXsDIq4OI0-lPQVuQ';

  // Format date function to fix month display issue
  function formatDate(dateString) {
    try {
      const date = new Date(dateString);
      if (isNaN(date.getTime())) {
        return 'Invalid Date';
      }
      
      // Format as MM/DD/YYYY to ensure consistent display
      const month = String(date.getMonth() + 1).padStart(2, '0');
      const day = String(date.getDate()).padStart(2, '0');
      const year = date.getFullYear();
      
      return `${month}/${day}/${year}`;
    } catch (error) {
      console.error('Error formatting date:', error);
      return 'Invalid Date';
    }
  }
  
  let supabase = null;
  
  // Wait for Supabase to load
  function waitForSupabase() {
    return new Promise((resolve) => {
      if (window.supabase) {
        supabase = window.supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
        resolve(supabase);
      } else {
        setTimeout(() => waitForSupabase().then(resolve), 100);
      }
    });
  }

  // Initialize admin profile page
  document.addEventListener('DOMContentLoaded', async () => {
    console.log('🔄 Loading admin profile...');
    await loadAdminInfo();
    await loadAdminStats();
    await loadRecentActivity();
    setupEventListeners();
  });

  // Load admin information
  async function loadAdminInfo() {
    try {
      console.log('🔄 Loading admin info...');
      
      // Wait for Supabase to be available
      if (!supabase) {
        await waitForSupabase();
      }
      
      // Get current user from Supabase
      const { data: { user }, error: userError } = await supabase.auth.getUser();
      
      if (userError) {
        console.error('Error getting user:', userError);
        return;
      }

      if (user) {
        // Get user profile from profiles table
        const { data: profile, error: profileError } = await supabase
          .from('profiles')
          .select('*')
          .eq('id', user.id)
          .single();

        if (profileError) {
          console.error('Error getting profile:', profileError);
          // Use auth user data as fallback
          document.getElementById('admin-full-name').textContent = user.user_metadata?.full_name || 'Admin User';
          document.getElementById('admin-email').textContent = user.email || 'No email';
        } else {
          document.getElementById('admin-full-name').textContent = profile.full_name || 'Admin User';
          document.getElementById('admin-email').textContent = profile.email || user.email || 'No email';
          
          // Update display elements
          document.getElementById('admin-display-name').textContent = profile.full_name || 'Admin User';
          document.getElementById('admin-display-email').textContent = profile.email || user.email || 'No email';
          
          // Update avatar
          const avatarElement = document.getElementById('admin-avatar-large');
          if (avatarElement) {
            const name = profile.full_name || user.user_metadata?.full_name || user.email || 'A';
            avatarElement.textContent = name.charAt(0).toUpperCase();
          }
          
          // Update dates
          if (profile.created_at) {
            document.getElementById('admin-created-at').textContent = formatDate(profile.created_at);
          }
          if (user.last_sign_in_at) {
            document.getElementById('admin-last-login').textContent = formatDate(user.last_sign_in_at);
          }
        }
      } else {
        document.getElementById('admin-full-name').textContent = 'No user logged in';
        document.getElementById('admin-email').textContent = 'No email';
      }
    } catch (error) {
      console.error('Error loading admin info:', error);
    }
  }

  // Load admin statistics
  async function loadAdminStats() {
    try {
      console.log('🔄 Loading admin stats...');
      
      // Wait for Supabase to be available
      if (!supabase) {
        await waitForSupabase();
      }
      
      // Get counts from different tables
      const [usersResult, contactsResult, ticketsResult, cartsResult] = await Promise.all([
        supabase.from('profiles').select('*', { count: 'exact', head: true }),
        supabase.from('contact_submissions').select('*', { count: 'exact', head: true }),
        supabase.from('support_tickets').select('*', { count: 'exact', head: true }),
        supabase.from('customization_forms').select('*', { count: 'exact', head: true })
      ]);

      const totalUsers = usersResult.count || 0;
      const totalContacts = contactsResult.count || 0;
      const totalTickets = ticketsResult.count || 0;
      const totalCarts = cartsResult.count || 0;

      // Update the stats
      document.getElementById('orders-managed').textContent = totalCarts.toString();
      document.getElementById('users-managed').textContent = totalUsers.toString();
      document.getElementById('tickets-resolved').textContent = totalTickets.toString();
      document.getElementById('contact-forms').textContent = totalContacts.toString();
      
      console.log('✅ Admin stats loaded:', { totalUsers, totalContacts, totalTickets, totalCarts });
    } catch (error) {
      console.error('Error loading admin stats:', error);
    }
  }

  // Load recent activity
  async function loadRecentActivity() {
    const container = document.getElementById('recent-activity');
    if (!container) return;

    try {
      console.log('🔄 Loading recent activity...');
      
      // Wait for Supabase to be available
      if (!supabase) {
        await waitForSupabase();
      }
      
      // Get recent data from different tables
      const [contactsResult, ticketsResult, cartsResult] = await Promise.all([
        supabase.from('contact_submissions').select('*').order('created_at', { ascending: false }).limit(3),
        supabase.from('support_tickets').select('*').order('created_at', { ascending: false }).limit(3),
        supabase.from('customization_forms').select('*').order('created_at', { ascending: false }).limit(3)
      ]);

      const activities = [];
      
      // Add contact activities
      if (contactsResult.data) {
        contactsResult.data.forEach(contact => {
          activities.push({
            type: 'contact',
            icon: 'user-plus',
            color: 'green',
            title: 'New Contact Submission',
            description: `${contact.first_name} ${contact.last_name} - ${contact.project_type || 'General Inquiry'}`,
            time: formatDate(contact.created_at)
          });
        });
      }

      // Add ticket activities
      if (ticketsResult.data) {
        ticketsResult.data.forEach(ticket => {
          activities.push({
            type: 'ticket',
            icon: 'question-mark-circle',
            color: 'yellow',
            title: `Support Ticket ${ticket.status || 'New'}`,
            description: `${ticket.subject || 'No subject'} - ${ticket.category || 'General'}`,
            time: formatDate(ticket.created_at)
          });
        });
      }

      // Add cart activities
      if (cartsResult.data) {
        cartsResult.data.forEach(cart => {
          activities.push({
            type: 'cart',
            icon: 'shopping-cart',
            color: 'blue',
            title: 'New Cart Customization',
            description: `${cart.project_name || 'Custom Project'} - ₹${cart.total_amount || '0'}`,
            time: formatDate(cart.created_at)
          });
        });
      }

      // Sort by date and take top 5
      activities.sort((a, b) => new Date(b.time).getTime() - new Date(a.time).getTime());
      activities.splice(5);

      if (activities.length === 0) {
        container.innerHTML = `
          <div class="text-center py-8 text-gray-500">
            <p>No recent activity</p>
          </div>
        `;
        return;
      }

      container.innerHTML = activities.map(activity => `
        <div class="flex items-center space-x-4 p-3 bg-gray-50 rounded-lg">
          <div class="w-8 h-8 bg-${activity.color}-100 rounded-full flex items-center justify-center">
            <svg class="w-4 h-4 text-${activity.color}-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              ${getActivityIcon(activity.icon)}
            </svg>
          </div>
          <div class="flex-1">
            <p class="text-sm font-medium text-gray-900">${activity.title}</p>
            <p class="text-sm text-gray-500">${activity.description}</p>
          </div>
          <span class="text-sm text-gray-400">${activity.time}</span>
        </div>
      `).join('');

      console.log('✅ Recent activity loaded:', activities.length, 'activities');
    } catch (error) {
      console.error('Error loading recent activity:', error);
      container.innerHTML = `
        <div class="text-center py-8 text-gray-500">
          <p>Error loading recent activity</p>
        </div>
      `;
    }
  }

  // Get activity icon
  function getActivityIcon(type) {
    switch (type) {
      case 'shopping-cart':
        return '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>';
      case 'question-mark-circle':
        return '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>';
      case 'user-plus':
        return '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path>';
      default:
        return '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>';
    }
  }

  // Setup event listeners
  function setupEventListeners() {
    // No edit functionality needed - profile editing will be done on main page
    console.log('✅ Profile page loaded - edit functionality removed');
    
    // Add keyboard shortcut for back button (Escape key)
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape') {
        console.log('⌨️ Escape key pressed - going back to admin dashboard');
        goBackToAdminDashboard();
      }
    });
  }


  // Back to Admin Dashboard function
  function goBackToAdminDashboard() {
    console.log('🔄 Navigating back to admin dashboard...');
    window.location.href = '/admin';
  }

  // Make function globally available
  window.goBackToAdminDashboard = goBackToAdminDashboard;

  // Show toast notification
  function showToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = `fixed top-4 right-4 px-6 py-3 rounded-md text-white z-50 ${
      type === 'success' ? 'bg-green-600' : 
      type === 'error' ? 'bg-red-600' : 'bg-blue-600'
    }`;
    toast.textContent = message;
    
    document.body.appendChild(toast);
    
    setTimeout(() => {
      toast.remove();
    }, 3000);
  }
</script>
