---
import AdminLayout from '../../layouts/AdminLayout.astro';
---

<AdminLayout title="Admin Test Page - DevExpress">
    <div class="space-y-6">
      <!-- Page Header -->
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-900">Admin Test Page</h1>
        <p class="text-gray-600 mt-2">Test and debug the data integration between user interface and admin panel</p>
      </div>

      <!-- Test Controls -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">Test Controls</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          <button id="test-orders" class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700">
            Test Orders Data
          </button>
          <button id="test-tickets" class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700">
            Test Support Tickets
          </button>
          <button id="test-users" class="px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700">
            Test Users Data
          </button>
        </div>
      </div>

      <!-- Data Display -->
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <!-- Orders Data -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">Orders from SharedDataStore</h3>
          <div id="orders-display" class="space-y-2 text-sm">
            <p class="text-gray-500">Click "Test Orders Data" to load</p>
          </div>
        </div>

        <!-- Support Tickets Data -->
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">Support Tickets from SharedDataStore</h3>
          <div id="tickets-display" class="space-y-2 text-sm">
            <p class="text-gray-500">Click "Test Support Tickets" to load</p>
          </div>
        </div>
      </div>

      <!-- Raw Data Display -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Raw localStorage Data</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <h4 class="font-medium text-gray-700 mb-2">Shared Orders</h4>
            <pre id="raw-orders" class="bg-gray-100 p-3 rounded text-xs overflow-auto max-h-40">Click test buttons to load data</pre>
          </div>
          <div>
            <h4 class="font-medium text-gray-700 mb-2">Shared Tickets</h4>
            <pre id="raw-tickets" class="bg-gray-100 p-3 rounded text-xs overflow-auto max-h-40">Click test buttons to load data</pre>
          </div>
        </div>
      </div>

      <!-- Debug Info -->
      <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Debug Information</h3>
        <div id="debug-info" class="space-y-2 text-sm">
          <p>AdminDataStore integration status: <span id="admin-store-status" class="font-medium">Checking...</span></p>
          <p>SharedDataStore integration status: <span id="shared-store-status" class="font-medium">Checking...</span></p>
          <p>LocalStorage status: <span id="localstorage-status" class="font-medium">Checking...</span></p>
        </div>
      </div>
    </div>
</AdminLayout>

<script>
  import { adminDataStore } from '../../lib/admin-data';
  import { sharedDataStore } from '../../lib/shared-data-store';

  // Test functions
  function testOrdersData() {
    try {
      const orders = adminDataStore.getOrders();
      const sharedOrders = sharedDataStore.getOrders();
      
      const ordersDisplay = document.getElementById('orders-display');
      const rawOrders = document.getElementById('raw-orders');
      
      if (ordersDisplay && rawOrders) {
        if (orders.length === 0) {
          ordersDisplay.innerHTML = '<p class="text-red-500">No orders found in AdminDataStore</p>';
        } else {
          ordersDisplay.innerHTML = orders.map(order => `
            <div class="border-l-4 border-blue-500 pl-3 py-2">
              <p><strong>Order:</strong> ${order.orderNumber}</p>
              <p><strong>Customer:</strong> ${order.customerName}</p>
              <p><strong>Status:</strong> ${order.status}</p>
              <p><strong>Amount:</strong> â‚¹${order.amount}</p>
            </div>
          `).join('');
        }
        
        rawOrders.textContent = JSON.stringify(sharedOrders, null, 2);
      }
      
      console.log('Orders from AdminDataStore:', orders);
      console.log('Orders from SharedDataStore:', sharedOrders);
    } catch (error) {
      console.error('Error testing orders data:', error);
      document.getElementById('orders-display').innerHTML = `<p class="text-red-500">Error: ${error.message}</p>`;
    }
  }

  function testSupportTickets() {
    try {
      const tickets = adminDataStore.getSupportTickets();
      const sharedTickets = sharedDataStore.getSupportTickets();
      
      const ticketsDisplay = document.getElementById('tickets-display');
      const rawTickets = document.getElementById('raw-tickets');
      
      if (ticketsDisplay && rawTickets) {
        if (tickets.length === 0) {
          ticketsDisplay.innerHTML = '<p class="text-red-500">No support tickets found in AdminDataStore</p>';
        } else {
          ticketsDisplay.innerHTML = tickets.map(ticket => `
            <div class="border-l-4 border-green-500 pl-3 py-2">
              <p><strong>Ticket:</strong> ${ticket.ticketNumber}</p>
              <p><strong>Subject:</strong> ${ticket.subject}</p>
              <p><strong>Status:</strong> ${ticket.status}</p>
              <p><strong>Priority:</strong> ${ticket.priority}</p>
            </div>
          `).join('');
        }
        
        rawTickets.textContent = JSON.stringify(sharedTickets, null, 2);
      }
      
      console.log('Tickets from AdminDataStore:', tickets);
      console.log('Tickets from SharedDataStore:', sharedTickets);
    } catch (error) {
      console.error('Error testing support tickets data:', error);
      document.getElementById('tickets-display').innerHTML = `<p class="text-red-500">Error: ${error.message}</p>`;
    }
  }

  function testUsersData() {
    try {
      const users = adminDataStore.getUsers();
      const sharedUsers = sharedDataStore.getUsers();
      
      console.log('Users from AdminDataStore:', users);
      console.log('Users from SharedDataStore:', sharedUsers);
      
      alert(`AdminDataStore users: ${users.length}\nSharedDataStore users: ${sharedUsers.length}`);
    } catch (error) {
      console.error('Error testing users data:', error);
      alert(`Error: ${error.message}`);
    }
  }

  function checkIntegrationStatus() {
    try {
      // Check AdminDataStore
      const adminOrders = adminDataStore.getOrders();
      const adminTickets = adminDataStore.getSupportTickets();
      
      document.getElementById('admin-store-status').textContent = 
        `Working - Orders: ${adminOrders.length}, Tickets: ${adminTickets.length}`;
      
      // Check SharedDataStore
      const sharedOrders = sharedDataStore.getOrders();
      const sharedTickets = sharedDataStore.getSupportTickets();
      
      document.getElementById('shared-store-status').textContent = 
        `Working - Orders: ${sharedOrders.length}, Tickets: ${sharedTickets.length}`;
      
      // Check localStorage
      const hasSharedOrders = localStorage.getItem('shared-orders');
      const hasSharedTickets = localStorage.getItem('shared-tickets');
      
      document.getElementById('localstorage-status').textContent = 
        `Orders: ${hasSharedOrders ? 'Found' : 'Not found'}, Tickets: ${hasSharedTickets ? 'Found' : 'Not found'}`;
      
    } catch (error) {
      console.error('Error checking integration status:', error);
      document.getElementById('admin-store-status').textContent = 'Error';
      document.getElementById('shared-store-status').textContent = 'Error';
      document.getElementById('localstorage-status').textContent = 'Error';
    }
  }

  // Setup event listeners
  document.addEventListener('DOMContentLoaded', () => {
    // Check integration status
    checkIntegrationStatus();
    
    // Setup test buttons
    document.getElementById('test-orders')?.addEventListener('click', testOrdersData);
    document.getElementById('test-tickets')?.addEventListener('click', testSupportTickets);
    document.getElementById('test-users')?.addEventListener('click', testUsersData);
  });

  // Make functions globally available for debugging
  (window as any).testOrdersData = testOrdersData;
  (window as any).testSupportTickets = testSupportTickets;
  (window as any).testUsersData = testUsersData;
  (window as any).checkIntegrationStatus = checkIntegrationStatus;
</script>
