---
import AdminLayout from '../../layouts/AdminLayout.astro';
import { supabase } from '../../lib/supabase';
---

<AdminLayout title="Complete User Data - DevExpress">
  <div class="max-w-7xl mx-auto">
    <div class="bg-white rounded-lg shadow p-6">
      <h2 class="text-2xl font-bold text-gray-900 mb-4">Complete User Data Dashboard</h2>
      <p class="text-gray-600 mb-6">View all user activities, registrations, contact forms, support tickets, and cart customizations in real-time.</p>
      
      <!-- Summary Cards -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <!-- Users Card -->
        <div class="bg-blue-50 rounded-lg p-6 border border-blue-200">
          <div class="flex items-center">
            <div class="p-2 bg-blue-100 rounded-lg">
              <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-blue-600">Total Users</p>
              <p class="text-2xl font-bold text-blue-900" id="total-users">0</p>
            </div>
          </div>
        </div>

        <!-- Contact Forms Card -->
        <div class="bg-green-50 rounded-lg p-6 border border-green-200">
          <div class="flex items-center">
            <div class="p-2 bg-green-100 rounded-lg">
              <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-green-600">Contact Forms</p>
              <p class="text-2xl font-bold text-green-900" id="total-contacts">0</p>
            </div>
          </div>
        </div>

        <!-- Support Tickets Card -->
        <div class="bg-orange-50 rounded-lg p-6 border border-orange-200">
          <div class="flex items-center">
            <div class="p-2 bg-orange-100 rounded-lg">
              <svg class="w-6 h-6 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-orange-600">Support Tickets</p>
              <p class="text-2xl font-bold text-orange-900" id="total-tickets">0</p>
            </div>
          </div>
        </div>

        <!-- Cart Orders Card -->
        <div class="bg-purple-50 rounded-lg p-6 border border-purple-200">
          <div class="flex items-center">
            <div class="p-2 bg-purple-100 rounded-lg">
              <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
              </svg>
            </div>
            <div class="ml-4">
              <p class="text-sm font-medium text-purple-600">Cart Orders</p>
              <p class="text-2xl font-bold text-purple-900" id="total-orders">0</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Action Buttons -->
      <div class="flex flex-wrap gap-4 mb-8">
        <button 
          onclick="openContactFormsModal()"
          class="bg-green-600 hover:bg-green-700 text-white font-medium px-6 py-3 rounded-lg transition-all transform hover:scale-105 shadow-lg hover:shadow-xl flex items-center"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
          </svg>
          View Contact Forms
        </button>
        
        <button 
          onclick="openCustomizationFormsModal()"
          class="bg-purple-600 hover:bg-purple-700 text-white font-medium px-6 py-3 rounded-lg transition-all transform hover:scale-105 shadow-lg hover:shadow-xl flex items-center"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
          </svg>
          Customization Form
        </button>
        
      </div>

      <!-- Detailed Data Sections -->
      <div class="space-y-8">
        
        <!-- Registered Users Section -->
        <div class="bg-white rounded-lg shadow p-6">
          <h3 class="text-xl font-bold text-gray-900 mb-4">Registered Users</h3>
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Phone</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Role</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Registered</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Login</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
              </thead>
              <tbody id="users-table-body" class="bg-white divide-y divide-gray-200">
                <tr>
                  <td colspan="7" class="px-6 py-4 text-center text-gray-500">Loading users...</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

        <!-- Contact Form Submissions Section -->
        <div class="bg-white rounded-lg shadow p-6">
          <h3 class="text-xl font-bold text-gray-900 mb-4">Contact Form Submissions</h3>
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Phone</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Company</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Project Type</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Submitted</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
              </thead>
              <tbody id="contact-table-body" class="bg-white divide-y divide-gray-200">
                <tr>
                  <td colspan="7" class="px-6 py-4 text-center text-gray-500">Loading contact submissions...</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

        <!-- Support Tickets Section -->
        <div class="bg-white rounded-lg shadow p-6">
          <h3 class="text-xl font-bold text-gray-900 mb-4">Support Tickets</h3>
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ticket ID</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Subject</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Category</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Priority</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
              </thead>
              <tbody id="tickets-table-body" class="bg-white divide-y divide-gray-200">
                <tr>
                  <td colspan="7" class="px-6 py-4 text-center text-gray-500">Loading support tickets...</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

        <!-- Customizations Section -->
        <div class="bg-white rounded-lg shadow p-6">
          <h3 class="text-xl font-bold text-gray-900 mb-4">Product Customizations</h3>
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Contact Email</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Product Type</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Product Name</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Project Name</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Price</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
              </thead>
              <tbody id="customizations-table-body" class="bg-white divide-y divide-gray-200">
                <tr>
                  <td colspan="7" class="px-6 py-4 text-center text-gray-500">Loading customizations...</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>

             </div>
     </div>
   </div>

   <!-- View Details Modal -->
   <div id="details-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
     <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
       <div class="mt-3">
         <div class="flex items-center justify-between mb-4">
           <h3 id="modal-title" class="text-lg font-medium text-gray-900">Details</h3>
           <button id="close-modal" class="text-gray-400 hover:text-gray-600">
             <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
               <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
             </svg>
           </button>
         </div>
         <div id="modal-content" class="space-y-4">
           <!-- Content will be loaded here -->
         </div>
       </div>
     </div>
  </div>
</AdminLayout>

<!-- Contact Forms Modal -->
<div id="contactFormsModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
  <div class="relative top-20 mx-auto p-5 border w-11/12 max-w-6xl shadow-lg rounded-md bg-white">
    <div class="mt-3">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-lg font-medium text-gray-900">Contact Forms</h3>
        <button onclick="closeContactFormsModal()" class="text-gray-400 hover:text-gray-600">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      
      <!-- Search Bar -->
      <div class="mb-4">
        <input 
          type="text" 
          id="contactSearch" 
          placeholder="Search by email, name, or message..." 
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-green-500"
          onkeyup="searchContacts()"
        />
      </div>
      
      <!-- Contact Forms List -->
      <div id="contacts-list" class="space-y-4 max-h-96 overflow-y-auto">
        <!-- Contact forms will be loaded here -->
      </div>
      
        <!-- Contact Details View -->
        <div id="contact-details-view" class="hidden cursor-pointer" style="background-color: rgba(0,0,0,0.1); min-height: 100%;">
          <div class="flex items-center justify-between mb-4 bg-white p-4 rounded-lg shadow-lg">
            <h4 class="text-lg font-medium text-gray-900">Contact Form Details</h4>
            <div class="flex items-center space-x-2">
              <span class="text-sm text-gray-500">Click outside to close</span>
              <button onclick="backToContactsList()" class="text-gray-400 hover:text-gray-600">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
              </button>
            </div>
          </div>
          <div id="contact-details-content" class="space-y-4">
            <!-- Contact details will be loaded here -->
          </div>
        </div>
      
      <!-- No Contacts Message -->
      <div id="no-contacts" class="hidden text-center py-8">
        <p class="text-gray-500">No contact forms found.</p>
      </div>
    </div>
  </div>
</div>

<!-- Customization Forms Modal -->
<div id="customizationFormsModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
  <div class="relative top-20 mx-auto p-5 border w-11/12 max-w-6xl shadow-lg rounded-md bg-white">
    <div class="mt-3">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-lg font-medium text-gray-900">Customization Forms</h3>
        <button onclick="closeCustomizationFormsModal()" class="text-gray-400 hover:text-gray-600">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      
      <!-- Search Bar -->
      <div class="mb-4">
        <input 
          type="text" 
          id="customizationSearch" 
          placeholder="Search by email, restaurant name, or project name..." 
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500"
          onkeyup="searchCustomizations()"
        />
      </div>
      
      <!-- Customization Forms List -->
      <div id="customizations-list" class="space-y-4 max-h-96 overflow-y-auto">
        <!-- Customization forms will be loaded here -->
      </div>
      
      <!-- Customization Details View -->
      <div id="customization-details-view" class="hidden cursor-pointer" style="background-color: rgba(0,0,0,0.1); min-height: 100%;">
        <div class="flex items-center justify-between mb-4 bg-white p-4 rounded-lg shadow-lg">
          <h4 class="text-lg font-medium text-gray-900">Customization Form Details</h4>
          <div class="flex items-center space-x-2">
            <span class="text-sm text-gray-500">Click outside to close</span>
            <button onclick="backToCustomizationsList()" class="text-gray-400 hover:text-gray-600">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
              </svg>
            </button>
          </div>
        </div>
        <div id="customization-details-content" class="space-y-4">
          <!-- Customization details will be loaded here -->
        </div>
      </div>
      
      <!-- No Customizations Message -->
      <div id="no-customizations" class="hidden text-center py-8">
        <p class="text-gray-500">No customization forms found.</p>
      </div>
    </div>
  </div>
</div>


<script>
  // Use the Supabase client from AdminLayout
  let supabase;
  
  // Wait for Supabase to load
  function waitForSupabase() {
    return new Promise((resolve) => {
      if (window.supabase && window.supabase.createClient) {
        // Use the same configuration as AdminLayout
        supabase = window.supabase.createClient(
          'https://lmrrdcaavwwletcjcpqv.supabase.co',
          'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxtcnJkY2Fhdnd3bGV0Y2pjcHF2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU1MDQ0ODgsImV4cCI6MjA3MTA4MDQ4OH0.AU59Qfr6K9i880Gcn5y-3pjCf8PXsDIq4OI0-lPQVuQ'
        );
        resolve(supabase);
      } else {
        setTimeout(() => waitForSupabase().then(resolve), 100);
      }
    });
  }
  
  console.log('Admin data dashboard loaded successfully');
  
  // Load all user data when page loads
  document.addEventListener('DOMContentLoaded', async () => {
    console.log('🔄 Loading admin data dashboard...');
    
    try {
      // Wait for Supabase to be ready
      console.log('⏳ Waiting for Supabase to load...');
      await waitForSupabase();
      console.log('✅ Supabase client ready');
      
      // Load all data in parallel
      await Promise.all([
        loadUsersData(),
        loadContactData(),
        loadTicketsData(),
        loadCartData(),
        updateSummaryCards()
      ]);
      
      console.log('✅ All admin data loaded successfully');
    } catch (error) {
      console.error('❌ Error loading admin data:', error);
    }
  });

  async function loadUsersData() {
    try {
      console.log('🔄 Loading users data...');
      const { data: users, error } = await supabase
        .from('profiles')
        .select('*')
        .order('created_at', { ascending: false });

      if (error) {
        console.error('Error loading users:', error);
        return;
      }

      const tbody = document.getElementById('users-table-body');
      if (!tbody) return;

      if (users && users.length > 0) {
        tbody.innerHTML = users.map(user => `
          <tr>
            <td class="px-6 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <div class="flex-shrink-0 h-10 w-10">
                  <div class="h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center">
                    <span class="text-sm font-medium text-blue-600">${user.full_name ? user.full_name.charAt(0).toUpperCase() : 'U'}</span>
                  </div>
                </div>
                <div class="ml-4">
                  <div class="text-sm font-medium text-gray-900">${user.full_name || 'No Name'}</div>
                </div>
              </div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${user.email}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${user.phone || '-'}</td>
            <td class="px-6 py-4 whitespace-nowrap">
              <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${user.role === 'admin' ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'}">
                ${user.role || 'customer'}
              </span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${new Date(user.created_at).toLocaleDateString()}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${user.last_login ? new Date(user.last_login).toLocaleDateString() : '-'}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
              <button onclick="viewUserDetails('${user.id}')" class="text-blue-600 hover:text-blue-900">View Details</button>
            </td>
          </tr>
        `).join('');
      } else {
        tbody.innerHTML = '<tr><td colspan="7" class="px-6 py-4 text-center text-gray-500">No users found</td></tr>';
      }
    } catch (error) {
      console.error('Error loading users data:', error);
    }
  }

  async function loadContactData() {
    try {
      console.log('🔄 Loading contact form data...');
      const { data: contacts, error } = await supabase
        .from('contact_submissions')
        .select('*')
        .order('created_at', { ascending: false });

      if (error) {
        console.error('Error loading contact data:', error);
        return;
      }

      const tbody = document.getElementById('contact-table-body');
      if (!tbody) return;

      if (contacts && contacts.length > 0) {
        tbody.innerHTML = contacts.map(contact => `
          <tr>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${contact.first_name} ${contact.last_name}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${contact.email || 'Not provided'}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${contact.phone || '-'}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${contact.company_name || '-'}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${contact.project_type || '-'}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${new Date(contact.created_at).toLocaleDateString()}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
              <button onclick="viewContactDetails('${contact.id}')" class="text-blue-600 hover:text-blue-900">View Details</button>
            </td>
          </tr>
        `).join('');
      } else {
        tbody.innerHTML = '<tr><td colspan="7" class="px-6 py-4 text-center text-gray-500">No contact submissions found</td></tr>';
      }
    } catch (error) {
      console.error('Error loading contact data:', error);
    }
  }

  async function loadTicketsData() {
    try {
      console.log('🔄 Loading support tickets data...');
      const { data: tickets, error } = await supabase
        .from('support_tickets')
        .select('*')
        .order('created_at', { ascending: false });

      if (error) {
        console.error('Error loading tickets data:', error);
        return;
      }

      const tbody = document.getElementById('tickets-table-body');
      if (!tbody) return;

      if (tickets && tickets.length > 0) {
        tbody.innerHTML = tickets.map(ticket => `
          <tr>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">#${ticket.id}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${ticket.subject}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${ticket.category}</td>
            <td class="px-6 py-4 whitespace-nowrap">
              <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${ticket.priority === 'high' ? 'bg-red-100 text-red-800' : ticket.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}">
                ${ticket.priority}
              </span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${ticket.status === 'open' ? 'bg-blue-100 text-blue-800' : 'bg-gray-100 text-gray-800'}">
                ${ticket.status}
              </span>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${new Date(ticket.created_at).toLocaleDateString()}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
              <button onclick="viewTicketDetails('${ticket.id}')" class="text-blue-600 hover:text-blue-900">View Details</button>
            </td>
          </tr>
        `).join('');
      } else {
        tbody.innerHTML = '<tr><td colspan="7" class="px-6 py-4 text-center text-gray-500">No support tickets found</td></tr>';
      }
    } catch (error) {
      console.error('Error loading tickets data:', error);
    }
  }

  async function loadCartData() {
    try {
      console.log('🔄 Loading cart customizations data...');
      console.log('🔍 Supabase client available:', !!supabase);
      
      if (!supabase) {
        console.error('❌ Supabase client not available');
        const tbody = document.getElementById('customizations-table-body');
        if (tbody) {
          tbody.innerHTML = '<tr><td colspan="7" class="px-6 py-4 text-center text-red-500">Supabase client not available</td></tr>';
        }
        return;
      }

      // Fetch both customization_forms and order_customizations data
      console.log('🔍 Fetching customization_forms data...');
      const { data: regularCustomizations, error: regularError } = await supabase
        .from('customization_forms')
        .select('*')
        .order('created_at', { ascending: false });

      console.log('🔍 Fetching order_customizations data...');
      const { data: omsCustomizations, error: omsError } = await supabase
        .from('order_customizations')
        .select('*')
        .order('created_at', { ascending: false });

      // Combine both datasets
      let allCustomizations = [];
      
      if (regularCustomizations && !regularError) {
        console.log('✅ Regular customizations loaded:', regularCustomizations.length);
        allCustomizations = [...allCustomizations, ...regularCustomizations];
      } else if (regularError) {
        console.error('❌ Error loading regular customizations:', regularError);
      }

      if (omsCustomizations && !omsError) {
        console.log('✅ OMS customizations loaded:', omsCustomizations.length);
        // Transform OMS data to match the expected format
        const transformedOmsData = omsCustomizations.map(oms => ({
          id: oms.id,
          contact_email: oms.email,
          product_type: 'order-menu-system',
          product_name: 'Order Menu System',
          project_name: oms.project_name || 'Not provided',
          restaurant_name: oms.restaurant_name || 'Not provided',
          owner_name: oms.owner_name || 'Not provided',
          restaurant_address: oms.address_line_1,
          contact_person: oms.contact_person || 'Not provided',
          phone: oms.phone_number || 'Not provided',
          contact_phone: oms.phone_number || 'Not provided',
          additional_requirements: oms.additional_requirements || 'Not provided',
          primary_color: null,
          secondary_color: null,
          accent_color: null,
          text_color: null,
          product_price: oms.total_amount,
          created_at: oms.created_at,
          updated_at: oms.updated_at,
          // OMS specific fields
          menu_categories: oms.menu_categories,
          menu_items: oms.menu_items,
          logo_url: oms.restaurant_logo_url,
          logo_filename: oms.logo_filename,
          logo_size: oms.logo_size
        }));
        allCustomizations = [...allCustomizations, ...transformedOmsData];
      } else if (omsError) {
        console.error('❌ Error loading OMS customizations:', omsError);
      }

      // Sort combined data by creation date
      allCustomizations.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));

      console.log('🔍 Combined customizations data:', allCustomizations.length, 'total items');

      const tbody = document.getElementById('customizations-table-body');
      if (!tbody) {
        console.error('❌ Customizations table body not found');
        return;
      }

      if (allCustomizations && allCustomizations.length > 0) {
        console.log(`✅ Found ${allCustomizations.length} customizations`);
        tbody.innerHTML = allCustomizations.map(customization => `
          <tr>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${customization.contact_email || '-'}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${customization.product_type || '-'}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${customization.product_name || '-'}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${customization.project_name || '-'}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${(customization.product_price || 0).toLocaleString('en-IN', { style: 'currency', currency: 'INR' })}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${new Date(customization.created_at).toLocaleDateString()}</td>
            <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
              <button onclick="viewCustomizationDetails('${customization.id}')" class="text-blue-600 hover:text-blue-900">View Details</button>
            </td>
          </tr>
        `).join('');
      } else {
        console.log('ℹ️ No customizations found');
        tbody.innerHTML = '<tr><td colspan="7" class="px-6 py-4 text-center text-gray-500">No customizations found</td></tr>';
      }
    } catch (error) {
      console.error('❌ Error loading customizations data:', error);
      const tbody = document.getElementById('customizations-table-body');
      if (tbody) {
        tbody.innerHTML = `<tr><td colspan="7" class="px-6 py-4 text-center text-red-500">Error: ${error.message}</td></tr>`;
      }
    }
  }

  async function updateSummaryCards() {
    try {
      // Get counts for summary cards
      const [usersResult, contactsResult, ticketsResult, cartsResult] = await Promise.all([
        supabase.from('profiles').select('*', { count: 'exact', head: true }),
        supabase.from('contact_submissions').select('*', { count: 'exact', head: true }),
        supabase.from('support_tickets').select('*', { count: 'exact', head: true }),
        supabase.from('customization_forms').select('*', { count: 'exact', head: true })
      ]);

      // Update summary cards
      const totalUsers = usersResult.count || 0;
      const totalContacts = contactsResult.count || 0;
      const totalTickets = ticketsResult.count || 0;
      const totalCarts = cartsResult.count || 0;

      // Update the summary card numbers
      const userCard = document.getElementById('total-users');
      const contactCard = document.getElementById('total-contacts');
      const ticketCard = document.getElementById('total-tickets');
      const orderCard = document.getElementById('total-orders');

      if (userCard) userCard.textContent = totalUsers.toString();
      if (contactCard) contactCard.textContent = totalContacts.toString();
      if (ticketCard) ticketCard.textContent = totalTickets.toString();
      if (orderCard) orderCard.textContent = totalCarts.toString();

      console.log('✅ Summary cards updated');
    } catch (error) {
      console.error('Error updating summary cards:', error);
    }
  }

  // Modal functionality
  document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('details-modal');
    const closeBtn = document.getElementById('close-modal');
    
    closeBtn?.addEventListener('click', () => {
      modal.classList.add('hidden');
    });
    
    // Close modal when clicking outside
    modal?.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.add('hidden');
      }
    });
  });

  // Global functions for viewing details
  window.viewUserDetails = async function(userId) {
    console.log('Viewing user details for:', userId);
    
    try {
      const { data: user, error } = await supabase
        .from('profiles')
        .select('*')
        .eq('id', userId)
        .single();

      if (error) {
        console.error('Error loading user details:', error);
        return;
      }

      const modal = document.getElementById('details-modal');
      const modalTitle = document.getElementById('modal-title');
      const modalContent = document.getElementById('modal-content');

      modalTitle.textContent = 'User Details';
      modalContent.innerHTML = `
        <div class="space-y-4">
          <div class="flex items-center space-x-4">
            <div class="h-16 w-16 rounded-full bg-blue-100 flex items-center justify-center">
              <span class="text-2xl font-medium text-blue-600">${user.full_name ? user.full_name.charAt(0).toUpperCase() : 'U'}</span>
            </div>
            <div>
              <h4 class="text-xl font-semibold text-gray-900">${user.full_name || 'No Name'}</h4>
              <p class="text-gray-600">${user.email}</p>
            </div>
          </div>
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div class="bg-gray-50 p-4 rounded-lg">
              <h5 class="font-medium text-gray-900 mb-2">Contact Information</h5>
              <p class="text-sm text-gray-600"><strong>Email:</strong> ${user.email}</p>
              <p class="text-sm text-gray-600"><strong>Phone:</strong> ${user.phone || 'Not provided'}</p>
            </div>
            
            <div class="bg-gray-50 p-4 rounded-lg">
              <h5 class="font-medium text-gray-900 mb-2">Account Information</h5>
              <p class="text-sm text-gray-600"><strong>Role:</strong> <span class="px-2 py-1 text-xs rounded-full ${user.role === 'admin' ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'}">${user.role || 'customer'}</span></p>
              <p class="text-sm text-gray-600"><strong>Registered:</strong> ${new Date(user.created_at).toLocaleDateString()}</p>
              <p class="text-sm text-gray-600"><strong>Last Login:</strong> ${user.last_login ? new Date(user.last_login).toLocaleDateString() : 'Never'}</p>
            </div>
          </div>
        </div>
      `;

      modal.classList.remove('hidden');
    } catch (error) {
      console.error('Error viewing user details:', error);
    }
  };

  window.viewContactDetails = async function(contactId) {
    console.log('Viewing contact details for:', contactId);
    
    try {
      const { data: contact, error } = await supabase
        .from('contact_submissions')
        .select('*')
        .eq('id', contactId)
        .single();

      if (error) {
        console.error('Error loading contact details:', error);
        return;
      }

      const modal = document.getElementById('details-modal');
      const modalTitle = document.getElementById('modal-title');
      const modalContent = document.getElementById('modal-content');

      modalTitle.textContent = 'Contact Form Details';
      modalContent.innerHTML = `
        <div class="space-y-4">
          <div class="bg-gray-50 p-4 rounded-lg">
            <h4 class="text-lg font-semibold text-gray-900 mb-3">Contact Information</h4>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <p class="text-sm text-gray-600"><strong>Name:</strong> ${contact.first_name} ${contact.last_name}</p>
                <p class="text-sm text-gray-600"><strong>Email:</strong> ${contact.email || 'Not provided'}</p>
                <p class="text-sm text-gray-600"><strong>Phone:</strong> ${contact.phone || 'Not provided'}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600"><strong>Company:</strong> ${contact.company_name || 'Not provided'}</p>
                <p class="text-sm text-gray-600"><strong>Project Type:</strong> ${contact.project_type || 'Not specified'}</p>
                <p class="text-sm text-gray-600"><strong>Submitted:</strong> ${new Date(contact.created_at).toLocaleDateString()}</p>
              </div>
            </div>
          </div>
          
          <div class="bg-gray-50 p-4 rounded-lg">
            <h5 class="font-medium text-gray-900 mb-2">Project Details</h5>
            <p class="text-sm text-gray-600">${contact.project_details || contact.message || 'No additional details provided'}</p>
          </div>
        </div>
      `;

      modal.classList.remove('hidden');
    } catch (error) {
      console.error('Error viewing contact details:', error);
    }
  };

  window.viewTicketDetails = async function(ticketId) {
    console.log('Viewing ticket details for:', ticketId);
    
    try {
      const { data: ticket, error } = await supabase
        .from('support_tickets')
        .select('*')
        .eq('id', ticketId)
        .single();

      if (error) {
        console.error('Error loading ticket details:', error);
        return;
      }

      const modal = document.getElementById('details-modal');
      const modalTitle = document.getElementById('modal-title');
      const modalContent = document.getElementById('modal-content');

      modalTitle.textContent = `Support Ticket #${ticket.id}`;
      modalContent.innerHTML = `
        <div class="space-y-4">
          <div class="bg-gray-50 p-4 rounded-lg">
            <h4 class="text-lg font-semibold text-gray-900 mb-3">Ticket Information</h4>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <p class="text-sm text-gray-600"><strong>Subject:</strong> ${ticket.subject}</p>
                <p class="text-sm text-gray-600"><strong>Category:</strong> ${ticket.category}</p>
                <p class="text-sm text-gray-600"><strong>Priority:</strong> <span class="px-2 py-1 text-xs rounded-full ${ticket.priority === 'high' ? 'bg-red-100 text-red-800' : ticket.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}">${ticket.priority}</span></p>
              </div>
              <div>
                <p class="text-sm text-gray-600"><strong>Status:</strong> <span class="px-2 py-1 text-xs rounded-full ${ticket.status === 'open' ? 'bg-blue-100 text-blue-800' : 'bg-gray-100 text-gray-800'}">${ticket.status}</span></p>
                <p class="text-sm text-gray-600"><strong>Email:</strong> ${ticket.user_email || ticket.email || 'No Email'}</p>
                <p class="text-sm text-gray-600"><strong>Created:</strong> ${new Date(ticket.created_at).toLocaleDateString()}</p>
              </div>
            </div>
          </div>
          
          <div class="bg-gray-50 p-4 rounded-lg">
            <h5 class="font-medium text-gray-900 mb-2">Description</h5>
            <p class="text-sm text-gray-600">${ticket.description || 'No description provided'}</p>
          </div>
        </div>
      `;

      modal.classList.remove('hidden');
    } catch (error) {
      console.error('Error viewing ticket details:', error);
    }
  };

  window.viewCartDetails = async function(cartId) {
    console.log('Viewing cart details for:', cartId);
    
    try {
      const { data: cart, error } = await supabase
        .from('customization_forms')
        .select('*')
        .eq('id', cartId)
        .single();

      if (error) {
        console.error('Error loading cart details:', error);
        return;
      }

      const modal = document.getElementById('details-modal');
      const modalTitle = document.getElementById('modal-title');
      const modalContent = document.getElementById('modal-content');

      modalTitle.textContent = 'Cart Customization Details';
      modalContent.innerHTML = `
        <div class="space-y-4">
          <div class="bg-gray-50 p-4 rounded-lg">
            <h4 class="text-lg font-semibold text-gray-900 mb-3">Project Information</h4>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <p class="text-sm text-gray-600"><strong>User Email:</strong> ${cart.user_email}</p>
                <p class="text-sm text-gray-600"><strong>Project Name:</strong> ${cart.project_name || 'Not specified'}</p>
                <p class="text-sm text-gray-600"><strong>App Name:</strong> ${cart.app_name || 'Not specified'}</p>
                <p class="text-sm text-gray-600"><strong>Contact Person:</strong> ${cart.contact_person || 'Not specified'}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600"><strong>Total Amount:</strong> ${cart.total_amount ? cart.total_amount.toLocaleString('en-IN', { style: 'currency', currency: 'INR' }) : '₹0'}</p>
                <p class="text-sm text-gray-600"><strong>Created:</strong> ${new Date(cart.created_at).toLocaleDateString()}</p>
                <p class="text-sm text-gray-600"><strong>Restaurant Name:</strong> ${cart.restaurant_name || 'N/A'}</p>
                <p class="text-sm text-gray-600"><strong>Cuisine Type:</strong> ${cart.cuisine_type || 'N/A'}</p>
              </div>
            </div>
          </div>
          
          <div class="bg-gray-50 p-4 rounded-lg">
            <h5 class="font-medium text-gray-900 mb-2">Customization Details</h5>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <p class="text-sm text-gray-600"><strong>Primary Color:</strong> <span class="inline-block w-4 h-4 rounded-full border" style="background-color: ${cart.primary_color || '#000'}"></span> ${cart.primary_color || 'Not specified'}</p>
                <p class="text-sm text-gray-600"><strong>Secondary Color:</strong> <span class="inline-block w-4 h-4 rounded-full border" style="background-color: ${cart.secondary_color || '#000'}"></span> ${cart.secondary_color || 'Not specified'}</p>
                <p class="text-sm text-gray-600"><strong>Accent Color:</strong> <span class="inline-block w-4 h-4 rounded-full border" style="background-color: ${cart.accent_color || '#000'}"></span> ${cart.accent_color || 'Not specified'}</p>
              </div>
              <div>
                <p class="text-sm text-gray-600"><strong>Logo URL:</strong> ${cart.logo_url ? '<a href="' + cart.logo_url + '" target="_blank" class="text-blue-600 hover:underline">View Logo</a>' : 'Not provided'}</p>
                <p class="text-sm text-gray-600"><strong>Additional Notes:</strong> ${cart.additional_notes || 'None'}</p>
              </div>
            </div>
          </div>
        </div>
      `;

      modal.classList.remove('hidden');
    } catch (error) {
      console.error('Error viewing cart details:', error);
    }
  };

  // Contact Forms Modal Functions
  function openContactFormsModal() {
    console.log('🔄 Opening contact forms modal...');
    const modal = document.getElementById('contactFormsModal');
    if (modal) {
      modal.classList.remove('hidden');
      // Prevent background scrolling
      document.body.style.overflow = 'hidden';
      console.log('✅ Modal opened, loading contact forms...');
      loadContactForms();
    } else {
      console.error('❌ Contact forms modal not found');
    }
  }

  function closeContactFormsModal() {
    const modal = document.getElementById('contactFormsModal');
    if (modal) {
      modal.classList.add('hidden');
      // Restore background scrolling
      document.body.style.overflow = 'auto';
    }
  }

  async function loadContactForms() {
    try {
      console.log('🔄 Loading contact forms from contact_submissions table...');
      const { data: contacts, error } = await supabase
        .from('contact_submissions')
        .select('*')
        .order('created_at', { ascending: false });

      if (error) {
        console.error('❌ Error loading contact forms:', error);
        alert('Error loading contact forms: ' + error.message);
        return;
      }

      console.log('✅ Contact forms loaded successfully:', contacts?.length || 0, 'contacts found');

      const contactsList = document.getElementById('contacts-list');
      const noContacts = document.getElementById('no-contacts');

      if (!contacts || contacts.length === 0) {
        contactsList.classList.add('hidden');
        noContacts.classList.remove('hidden');
        return;
      }

      noContacts.classList.add('hidden');
      contactsList.classList.remove('hidden');

      contactsList.innerHTML = contacts.map(contact => `
        <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
          <div class="flex items-center justify-between mb-3">
            <div class="flex items-center space-x-3">
              <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">
                Contact Form
              </span>
            </div>
            <span class="text-sm text-gray-500">${new Date(contact.created_at).toLocaleDateString()}</span>
          </div>
          
          <h4 class="font-semibold text-gray-900 mb-2">${contact.first_name} ${contact.last_name || ''}</h4>
          <p class="text-gray-600 text-sm mb-2">${contact.message ? (contact.message.length > 100 ? contact.message.substring(0, 100) + '...' : contact.message) : 'No message'}</p>
          <p class="text-gray-500 text-xs mb-3">Email: ${contact.email || 'Not provided'}</p>
          <p class="text-gray-400 text-xs mb-3">Phone: ${contact.phone || 'Not provided'}</p>
          
          <div class="flex justify-between items-center mt-3">
            <button 
              onclick="viewContactDetailsInModal('${contact.id}')" 
              class="text-green-600 hover:text-green-800 text-sm font-medium"
            >
              View Details
            </button>
          </div>
        </div>
      `).join('');
    } catch (error) {
      alert('Error loading contact forms: ' + error.message);
    }
  }



  // Search functions
  function searchContacts() {
    const searchTerm = document.getElementById('contactSearch').value.toLowerCase();
    const contactItems = document.querySelectorAll('#contacts-list > div');
    
    contactItems.forEach(item => {
      const email = item.querySelector('p[class*="text-gray-500"]')?.textContent.toLowerCase() || '';
      const name = item.querySelector('h4')?.textContent.toLowerCase() || '';
      const message = item.querySelector('p[class*="text-gray-600"]')?.textContent.toLowerCase() || '';
      
      if (email.includes(searchTerm) || name.includes(searchTerm) || message.includes(searchTerm)) {
        item.style.display = 'block';
      } else {
        item.style.display = 'none';
      }
    });
  }


  // Helper function to get selected products based on actual data structure
  function getSelectedProducts(cart) {
    // Check product_id and product_name to determine what was selected
    const productId = cart.product_id;
    const productName = cart.product_name;
    
    // Map product IDs to display names
    const productMap = {
      '1': 'Restaurant Menu System',
      '2': 'Android TV App',
      '3': 'Streaming Mobile App', 
      '4': 'Restaurant Website',
      'restaurant-menu': 'Restaurant Menu System',
      'restaurant-menu-system': 'Restaurant Menu System',
      'android-tv': 'Android TV App',
      'android-tv-app': 'Android TV App',
      'mobile-streaming': 'Streaming Mobile App',
      'streaming-mobile-app': 'Streaming Mobile App',
      'restaurant-website': 'Restaurant Website'
    };
    
    // Return the mapped product name or the actual product name
    return productMap[productId] || productName || 'Unknown Product';
  }

  // Cart details view functions
  async function viewCartDetailsInModal(cartId) {
    try {
      const { data: cart, error } = await supabase
        .from('customization_forms')
        .select('*')
        .eq('id', cartId)
        .single();

      if (error) {
        alert('Error loading cart details: ' + error.message);
        return;
      }

      // Hide the carts list and show details view
      document.getElementById('carts-list').classList.add('hidden');
      document.getElementById('cart-details-view').classList.remove('hidden');
      
      // Add click outside to close functionality
      setTimeout(() => {
        const detailsView = document.getElementById('cart-details-view');
        if (detailsView) {
          // Remove any existing event listeners
          detailsView.replaceWith(detailsView.cloneNode(true));
          const newDetailsView = document.getElementById('cart-details-view');
          
          newDetailsView.addEventListener('click', function(e) {
            // If clicking on the details view itself (not its children), close it
            if (e.target === newDetailsView) {
              backToCartsList();
            }
          });
        }
      }, 100);

      // Populate the details content
      const detailsContent = document.getElementById('cart-details-content');
      detailsContent.innerHTML = `
        <div class="bg-white rounded-lg shadow p-6">
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
            <div>
              <h5 class="font-medium text-gray-900 mb-3">Project Information</h5>
              <p class="text-sm text-gray-600 mb-2"><strong>Project Name:</strong> ${cart.project_name || 'Not specified'}</p>
              <p class="text-sm text-gray-600 mb-2"><strong>App Name:</strong> ${cart.app_name || 'Not specified'}</p>
              <p class="text-sm text-gray-600 mb-2"><strong>Contact Person:</strong> ${cart.contact_person || 'Not specified'}</p>
              <p class="text-sm text-gray-600 mb-2"><strong>User Email:</strong> ${cart.user_email || 'Not provided'}</p>
              <p class="text-sm text-gray-600 mb-2"><strong>Total Amount:</strong> ${cart.total_amount ? cart.total_amount.toLocaleString('en-IN', { style: 'currency', currency: 'INR' }) : '₹0'}</p>
              <p class="text-sm text-gray-600 mb-2"><strong>Created:</strong> ${new Date(cart.created_at).toLocaleDateString()}</p>
            </div>
            <div>
              <h5 class="font-medium text-gray-900 mb-3">Restaurant Details</h5>
              <p class="text-sm text-gray-600 mb-2"><strong>Restaurant Name:</strong> ${cart.restaurant_name || 'N/A'}</p>
              <p class="text-sm text-gray-600 mb-2"><strong>Cuisine Type:</strong> ${cart.cuisine_type || 'N/A'}</p>
              <p class="text-sm text-gray-600 mb-2"><strong>Logo URL:</strong> ${cart.logo_url ? '<a href="' + cart.logo_url + '" target="_blank" class="text-blue-600 hover:underline">View Logo</a>' : 'Not provided'}</p>
            </div>
          </div>
          
          <div class="bg-gray-50 p-4 rounded-lg mb-6">
            <h5 class="font-medium text-gray-900 mb-3">Color Customization</h5>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div class="flex items-center space-x-2">
                <span class="inline-block w-6 h-6 rounded-full border-2 border-gray-300" style="background-color: ${cart.primary_color || '#000'}"></span>
                <span class="text-sm text-gray-600"><strong>Primary:</strong> ${cart.primary_color || 'Not specified'}</span>
              </div>
              <div class="flex items-center space-x-2">
                <span class="inline-block w-6 h-6 rounded-full border-2 border-gray-300" style="background-color: ${cart.secondary_color || '#000'}"></span>
                <span class="text-sm text-gray-600"><strong>Secondary:</strong> ${cart.secondary_color || 'Not specified'}</span>
              </div>
              <div class="flex items-center space-x-2">
                <span class="inline-block w-6 h-6 rounded-full border-2 border-gray-300" style="background-color: ${cart.accent_color || '#000'}"></span>
                <span class="text-sm text-gray-600"><strong>Accent:</strong> ${cart.accent_color || 'Not specified'}</span>
              </div>
            </div>
          </div>
          
          <div class="bg-gray-50 p-4 rounded-lg mb-6">
            <h5 class="font-medium text-gray-900 mb-3">Product Chosen by User</h5>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <h6 class="font-medium text-gray-800 mb-2">Selected Product:</h6>
                <div class="space-y-1">
                  <p class="text-sm text-gray-600"><strong>Product ID:</strong> ${cart.product_id || 'Not specified'}</p>
                  <p class="text-sm text-gray-600"><strong>Product Name:</strong> ${cart.product_name || 'Not specified'}</p>
                  <p class="text-sm text-gray-600"><strong>Product Description:</strong> ${cart.product_description || 'Not provided'}</p>
                  <p class="text-sm text-gray-600"><strong>Custom Name:</strong> ${cart.custom_name || 'Not specified'}</p>
                </div>
              </div>
              <div>
                <h6 class="font-medium text-gray-800 mb-2">Pricing Details:</h6>
                <div class="space-y-1">
                  <p class="text-sm text-gray-600"><strong>Base Price:</strong> ${cart.base_price ? cart.base_price.toLocaleString('en-IN', { style: 'currency', currency: 'INR' }) : '₹0'}</p>
                  <p class="text-sm text-gray-600"><strong>Selected Features:</strong> ${cart.selected_features ? (Array.isArray(cart.selected_features) ? cart.selected_features.join(', ') : cart.selected_features) : 'None'}</p>
                  <p class="text-sm text-gray-600"><strong>Features Count:</strong> ${cart.selected_features ? (Array.isArray(cart.selected_features) ? cart.selected_features.length : 1) : '0'}</p>
                  <p class="text-sm text-gray-600"><strong>Features Cost:</strong> ${cart.selected_features ? ((Array.isArray(cart.selected_features) ? cart.selected_features.length : 1) * 500).toLocaleString('en-IN', { style: 'currency', currency: 'INR' }) : '₹0'}</p>
                </div>
              </div>
            </div>
          </div>
          
          <div class="bg-gray-50 p-4 rounded-lg">
            <h5 class="font-medium text-gray-900 mb-3">Additional Requirements</h5>
            <p class="text-sm text-gray-600 whitespace-pre-wrap">${cart.additional_requirements || 'No additional requirements provided'}</p>
          </div>
        </div>
      `;
    } catch (error) {
      console.error('Error viewing cart details:', error);
      alert('Error loading cart details: ' + error.message);
    }
  }

  function backToCartsList() {
    // Hide details view and show carts list
    document.getElementById('cart-details-view').classList.add('hidden');
    document.getElementById('carts-list').classList.remove('hidden');
  }

  // Contact details view functions
  async function viewContactDetailsInModal(contactId) {
    try {
      const { data: contact, error } = await supabase
        .from('contact_submissions')
        .select('*')
        .eq('id', contactId)
        .single();

      if (error) {
        alert('Error loading contact details: ' + error.message);
        return;
      }

      // Hide the contacts list and show details view
      document.getElementById('contacts-list').classList.add('hidden');
      document.getElementById('contact-details-view').classList.remove('hidden');
      
      // Add click outside to close functionality
      setTimeout(() => {
        const detailsView = document.getElementById('contact-details-view');
        if (detailsView) {
          // Remove any existing event listeners
          detailsView.replaceWith(detailsView.cloneNode(true));
          const newDetailsView = document.getElementById('contact-details-view');
          
          newDetailsView.addEventListener('click', function(e) {
            // If clicking on the details view itself (not its children), close it
            if (e.target === newDetailsView) {
              backToContactsList();
            }
          });
        }
      }, 100);

      // Populate the details content
      const detailsContent = document.getElementById('contact-details-content');
      detailsContent.innerHTML = `
        <div class="bg-white rounded-lg shadow p-6">
          <h4 class="text-xl font-bold text-gray-900 mb-6">Contact Form Details</h4>
          
          <!-- Contact Information Section -->
          <div class="bg-gray-50 p-4 rounded-lg mb-4">
            <h5 class="text-lg font-semibold text-gray-900 mb-3">Contact Information</h5>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="space-y-2">
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">First Name:</span>
                  <span class="text-sm text-gray-900">${contact.first_name || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Last Name:</span>
                  <span class="text-sm text-gray-900">${contact.last_name || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Email:</span>
                  <span class="text-sm text-gray-900">${contact.email || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Phone:</span>
                  <span class="text-sm text-gray-900">${contact.phone || 'Not provided'}</span>
                </div>
              </div>
              <div class="space-y-2">
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Company:</span>
                  <span class="text-sm text-gray-900">${contact.company_name || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Project Type:</span>
                  <span class="text-sm text-gray-900">${contact.project_type || 'Not specified'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Submitted:</span>
                  <span class="text-sm text-gray-900">${new Date(contact.created_at).toLocaleString()}</span>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Message Section -->
          <div class="bg-gray-50 p-4 rounded-lg">
            <h5 class="text-lg font-semibold text-gray-900 mb-3">Message</h5>
            <div class="space-y-2">
              <div class="flex justify-between">
                <span class="text-sm font-bold text-gray-600">Message:</span>
                <span class="text-sm text-gray-900 whitespace-pre-wrap">${contact.message || 'No message provided'}</span>
              </div>
            </div>
          </div>
        </div>
      `;
    } catch (error) {
      console.error('Error viewing contact details:', error);
      alert('Error loading contact details: ' + error.message);
    }
  }

  function backToContactsList() {
    // Hide details view and show contacts list
    document.getElementById('contact-details-view').classList.add('hidden');
    document.getElementById('contacts-list').classList.remove('hidden');
    // Keep background scrolling disabled since modal is still open
  }

  // Customization Forms Modal Functions
  function openCustomizationFormsModal() {
    console.log('🔄 Opening customization forms modal...');
    const modal = document.getElementById('customizationFormsModal');
    if (modal) {
      modal.classList.remove('hidden');
      // Prevent background scrolling
      document.body.style.overflow = 'hidden';
      console.log('✅ Modal opened, loading customization forms...');
      loadCustomizationForms();
    } else {
      console.error('❌ Customization forms modal not found');
    }
  }

  function closeCustomizationFormsModal() {
    const modal = document.getElementById('customizationFormsModal');
    if (modal) {
      modal.classList.add('hidden');
      // Restore background scrolling
      document.body.style.overflow = 'auto';
    }
  }

  async function loadCustomizationForms() {
    try {
      console.log('🔄 Loading customization forms from order_customizations table...');
      const { data: customizations, error } = await supabase
        .from('order_customizations')
        .select('*')
        .order('created_at', { ascending: false });

      if (error) {
        console.error('❌ Error loading customization forms:', error);
        alert('Error loading customization forms: ' + error.message);
        return;
      }

      console.log('✅ Customization forms loaded successfully:', customizations?.length || 0, 'forms found');

      const customizationsList = document.getElementById('customizations-list');
      const noCustomizations = document.getElementById('no-customizations');

      if (!customizations || customizations.length === 0) {
        customizationsList.classList.add('hidden');
        noCustomizations.classList.remove('hidden');
        return;
      }

      noCustomizations.classList.add('hidden');
      customizationsList.classList.remove('hidden');

      customizationsList.innerHTML = customizations.map(customization => `
        <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
          <div class="flex items-center justify-between mb-3">
            <div class="flex items-center space-x-3">
              <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-purple-100 text-purple-800">
                Order Menu System
              </span>
            </div>
            <span class="text-sm text-gray-500">${new Date(customization.created_at).toLocaleDateString()}</span>
          </div>
          
          <h4 class="font-semibold text-gray-900 mb-2">${customization.project_name || 'No Project Name'}</h4>
          <div class="text-gray-600 text-sm mb-2">
            <p class="mb-1"><strong>Restaurant Name:</strong> ${customization.restaurant_name || 'Not provided'}</p>
            <p class="mb-1"><strong>Owner Name:</strong> ${customization.owner_name || 'Not provided'}</p>
            <p class="mb-1"><strong>Contact Person:</strong> ${customization.contact_person || 'Not provided'}</p>
            <p class="mb-1"><strong>Total Amount:</strong> ₹${(customization.total_amount || 0).toLocaleString('en-IN')}</p>
            <p class="mb-1"><strong>Additional Requirements:</strong> ${customization.additional_requirements ? (customization.additional_requirements.length > 100 ? customization.additional_requirements.substring(0, 100) + '...' : customization.additional_requirements) : 'No additional requirements provided'}</p>
          </div>
          <p class="text-gray-500 text-xs mb-3">Email: ${customization.email || 'Not provided'}</p>
          <p class="text-gray-400 text-xs mb-3">Phone: ${customization.phone_number || 'Not provided'}</p>
          
          <div class="flex justify-between items-center mt-3">
            <button 
              onclick="viewCustomizationDetailsInModal('${customization.id}')" 
              class="text-purple-600 hover:text-purple-800 text-sm font-medium"
            >
              View Details
            </button>
          </div>
        </div>
      `).join('');
    } catch (error) {
      alert('Error loading customization forms: ' + error.message);
    }
  }

  function searchCustomizations() {
    const searchTerm = document.getElementById('customizationSearch').value.toLowerCase();
    const customizationItems = document.querySelectorAll('#customizations-list > div');
    
    customizationItems.forEach(item => {
      const email = item.querySelector('p[class*="text-gray-500"]')?.textContent.toLowerCase() || '';
      const projectName = item.querySelector('h4')?.textContent.toLowerCase() || '';
      const restaurantName = item.querySelector('p[class*="text-gray-600"]')?.textContent.toLowerCase() || '';
      
      if (email.includes(searchTerm) || projectName.includes(searchTerm) || restaurantName.includes(searchTerm)) {
        item.style.display = 'block';
      } else {
        item.style.display = 'none';
      }
    });
  }

  async function viewCustomizationDetailsInModal(customizationId) {
    try {
      console.log('🔄 Loading customization details for:', customizationId);
      const { data: customization, error } = await supabase
        .from('order_customizations')
        .select('*')
        .eq('id', customizationId)
        .single();

      if (error) {
        alert('Error loading customization details: ' + error.message);
        return;
      }

      // Hide customizations list and show details
      document.getElementById('customizations-list').classList.add('hidden');
      document.getElementById('customization-details-view').classList.remove('hidden');

      // Add click outside to close functionality
      setTimeout(() => {
        const detailsView = document.getElementById('customization-details-view');
        if (detailsView) {
          // Remove any existing event listeners
          detailsView.replaceWith(detailsView.cloneNode(true));
          const newDetailsView = document.getElementById('customization-details-view');
          
          newDetailsView.addEventListener('click', function(e) {
            // If clicking on the details view itself (not its children), close it
            if (e.target === newDetailsView) {
              backToCustomizationsList();
            }
          });
        }
      }, 100);

      // Populate the details content
      const detailsContent = document.getElementById('customization-details-content');
      detailsContent.innerHTML = `
        <div class="bg-white rounded-lg shadow p-6">
          <h4 class="text-xl font-bold text-gray-900 mb-6">Customization Form Details</h4>
          
          <!-- Product Information Section -->
          <div class="bg-gray-50 p-4 rounded-lg mb-4">
            <h5 class="text-lg font-semibold text-gray-900 mb-3">Product Information</h5>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="space-y-2">
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Product Type:</span>
                  <span class="text-sm text-gray-900">Order Menu System</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Product Name:</span>
                  <span class="text-sm text-gray-900">Order Menu System</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Price:</span>
                  <span class="text-sm text-gray-900">₹${(customization.total_amount || 0).toLocaleString('en-IN')}</span>
                </div>
              </div>
              <div class="space-y-2">
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Project Name:</span>
                  <span class="text-sm text-gray-900">${customization.project_name || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Restaurant Name:</span>
                  <span class="text-sm text-gray-900">${customization.restaurant_name || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Owner Name:</span>
                  <span class="text-sm text-gray-900">${customization.owner_name || 'Not provided'}</span>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Contact Information Section -->
          <div class="bg-gray-50 p-4 rounded-lg mb-4">
            <h5 class="text-lg font-semibold text-gray-900 mb-3">Contact Information</h5>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="space-y-2">
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Email:</span>
                  <span class="text-sm text-gray-900">${customization.email || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Phone:</span>
                  <span class="text-sm text-gray-900">${customization.phone_number || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Contact Person:</span>
                  <span class="text-sm text-gray-900">${customization.contact_person || 'Not provided'}</span>
                </div>
              </div>
              <div class="space-y-2">
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Created:</span>
                  <span class="text-sm text-gray-900">${new Date(customization.created_at).toLocaleString()}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Updated:</span>
                  <span class="text-sm text-gray-900">${new Date(customization.updated_at || customization.created_at).toLocaleString()}</span>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Address Information Section -->
          <div class="bg-gray-50 p-4 rounded-lg mb-4">
            <h5 class="text-lg font-semibold text-gray-900 mb-3">Address Information</h5>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div class="space-y-2">
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">House/Flat Number:</span>
                  <span class="text-sm text-gray-900">${customization.house_flat_number || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Address:</span>
                  <span class="text-sm text-gray-900">${customization.address_line_1 || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">City:</span>
                  <span class="text-sm text-gray-900">${customization.city || 'Not provided'}</span>
                </div>
              </div>
              <div class="space-y-2">
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">State:</span>
                  <span class="text-sm text-gray-900">${customization.state || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Pincode:</span>
                  <span class="text-sm text-gray-900">${customization.pincode || 'Not provided'}</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-sm font-bold text-gray-600">Country:</span>
                  <span class="text-sm text-gray-900">${customization.country || 'Not provided'}</span>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Additional Requirements Section -->
          ${customization.additional_requirements ? `
          <div class="bg-gray-50 p-4 rounded-lg mb-4">
            <h5 class="text-lg font-semibold text-gray-900 mb-3">Additional Requirements</h5>
            <div class="space-y-2">
              <div class="flex justify-between">
                <span class="text-sm font-bold text-gray-600">Requirements:</span>
                <span class="text-sm text-gray-900">${customization.additional_requirements}</span>
              </div>
            </div>
          </div>
          ` : ''}
          
          <!-- Logo Section -->
          ${customization.restaurant_logo_url ? `
          <div class="bg-gray-50 p-4 rounded-lg mb-4">
            <h5 class="text-lg font-semibold text-gray-900 mb-3">Restaurant Logo</h5>
            <div class="flex items-center space-x-4">
              <img src="${customization.restaurant_logo_url}" alt="Restaurant Logo" class="h-16 w-16 object-contain border rounded">
              <div>
                <p class="text-sm text-gray-600">${customization.logo_filename || 'Restaurant Logo'}</p>
                <p class="text-xs text-gray-500">Logo uploaded successfully</p>
              </div>
            </div>
          </div>
          ` : ''}
          
          <!-- Menu Photos Section -->
          ${customization.menu_photos_urls && customization.menu_photos_urls.length > 0 ? `
          <div class="bg-gray-50 p-4 rounded-lg">
            <h5 class="text-lg font-semibold text-gray-900 mb-3">Menu Photos (${customization.menu_photos_urls.length} photos)</h5>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
              ${customization.menu_photos_urls.slice(0, 8).map(photoUrl => `
                <img src="${photoUrl}" alt="Menu Photo" class="h-20 w-20 object-cover border rounded">
              `).join('')}
              ${customization.menu_photos_urls.length > 8 ? `
                <div class="h-20 w-20 border rounded flex items-center justify-center bg-gray-100">
                  <span class="text-xs text-gray-500">+${customization.menu_photos_urls.length - 8} more</span>
                </div>
              ` : ''}
            </div>
          </div>
          ` : ''}
        </div>
      `;
    } catch (error) {
      console.error('Error viewing customization details:', error);
      alert('Error loading customization details: ' + error.message);
    }
  }

  function backToCustomizationsList() {
    // Hide details view and show customizations list
    document.getElementById('customization-details-view').classList.add('hidden');
    document.getElementById('customizations-list').classList.remove('hidden');
    // Keep background scrolling disabled since modal is still open
  }

  // Function to view customization details (for table view)
  window.viewCustomizationDetails = async function(customizationId) {
    console.log('🔄 Loading customization details for table view:', customizationId);
    
    try {
      const { data: customization, error } = await supabase
        .from('order_customizations')
        .select('*')
        .eq('id', customizationId)
        .single();

      if (error) {
        console.error('Error loading customization details:', error);
        alert('Error loading customization details: ' + error.message);
        return;
      }

      // Create a simple alert with the details for now
      const details = `
Customization Details:
====================
Product Type: Order Menu System
Product Name: Order Menu System
Project Name: ${customization.project_name || 'Not provided'}
Price: ₹${(customization.total_amount || 0).toLocaleString('en-IN')}
Contact Email: ${customization.email || 'Not provided'}
Phone: ${customization.phone_number || 'Not provided'}
Restaurant Name: ${customization.restaurant_name || 'Not provided'}
Owner Name: ${customization.owner_name || 'Not provided'}
Contact Person: ${customization.contact_person || 'Not provided'}

Address Information:
House/Flat Number: ${customization.house_flat_number || 'Not provided'}
Address: ${customization.address_line_1 || 'Not provided'}
City: ${customization.city || 'Not provided'}
State: ${customization.state || 'Not provided'}
Pincode: ${customization.pincode || 'Not provided'}
Country: ${customization.country || 'Not provided'}

Created: ${new Date(customization.created_at).toLocaleString()}
${customization.additional_requirements ? `Additional Requirements: ${customization.additional_requirements}` : ''}
        `;
      
      alert(details);
    } catch (error) {
      console.error('Error viewing customization details:', error);
      alert('Error viewing customization details: ' + error.message);
    }
  };



  // Make functions globally available
  window.openContactFormsModal = openContactFormsModal;
  window.closeContactFormsModal = closeContactFormsModal;
  window.searchContacts = searchContacts;
  window.viewContactDetailsInModal = viewContactDetailsInModal;
  window.backToContactsList = backToContactsList;
  window.openCustomizationFormsModal = openCustomizationFormsModal;
  window.closeCustomizationFormsModal = closeCustomizationFormsModal;
  window.searchCustomizations = searchCustomizations;
  window.viewCustomizationDetailsInModal = viewCustomizationDetailsInModal;
  window.backToCustomizationsList = backToCustomizationsList;
  window.viewCustomizationDetails = viewCustomizationDetails;
</script>
