import{supabase as m}from"./supabase.C3b_eKiV.js";import"./Toast.astro_astro_type_script_index_0_lang.DSPk3YYf.js";import"https://unpkg.com/@supabase/supabase-js@2";import"./index.BymsOcZI.js";import"./preload-helper.CLcXU_4U.js";const p=document.getElementById("login-form"),g=document.getElementById("error-message"),i=document.getElementById("error-text"),d=document.getElementById("success-message"),h=document.getElementById("success-text"),w=document.getElementById("password-updated-message"),v=document.getElementById("google-signin-btn");document.addEventListener("DOMContentLoaded",()=>{new URLSearchParams(window.location.search).get("message")==="password-updated"&&w&&(w.classList.remove("hidden"),setTimeout(()=>{w.classList.add("hidden")},5e3))});function c(s,e="info"){h&&(h.textContent=s),d?.classList.remove("hidden"),d?.classList.add(e),e==="success"&&setTimeout(()=>{d?.classList.add("hidden")},3e3)}async function x(){try{c("Connecting to Google...","loading");const{data:s,error:e}=await m.auth.signInWithOAuth({provider:"google",options:{redirectTo:`${window.location.origin}/auth/callback`,queryParams:{access_type:"offline",prompt:"consent"}}});if(e){console.error("Google auth error:",e);let t=e.message;e.message.includes("Provider not found")||e.message.includes("not configured")?t="Google provider not configured. Please contact administrator.":e.message.includes("redirect_uri_mismatch")||e.message.includes("mismatch")?(t=`Redirect URI mismatch. Please add this exact URI to Google Cloud Console: ${window.location.origin}/auth/callback`,console.error("URI Mismatch Details:",{currentOrigin:window.location.origin,expectedRedirect:`${window.location.origin}/auth/callback`,error:e.message,fixInstructions:"Add the exact URI above to Google Cloud Console → APIs & Services → Credentials → OAuth 2.0 Client ID → Authorized redirect URIs"})):e.message.includes("access_denied")&&(t="Access denied. Please try again."),c(`Authentication failed: ${t}`,"error");return}c("Redirecting to Google...","loading")}catch(s){console.error("Google auth error:",s),c(`Authentication failed: ${s.message}`,"error")}}async function C(s){try{const{data:e,error:t}=await m.rpc("sync_google_user",{p_google_id:s.user_metadata.provider_id,p_email:s.email,p_name:s.user_metadata.full_name,p_picture:s.user_metadata.avatar_url,p_provider_id:s.user_metadata.provider_id});if(t){console.error("Sync error:",t);return}return console.log("Google user synced:",e),e}catch(e){console.error("Sync error:",e)}}v?.addEventListener("click",x);m.auth.onAuthStateChange(async(s,e)=>{if(s==="SIGNED_IN"&&e?.user){const t=e.user;t.app_metadata.provider==="google"&&(c("Successfully signed in with Google!","success"),C(t).catch(u=>{console.warn("Google user sync failed (non-critical):",u)}),setTimeout(()=>{window.location.href="/dashboard"},800))}});p?.addEventListener("submit",async s=>{s.preventDefault();const e=new FormData(p),t=e.get("email"),u=e.get("password");if(!t||!u){i&&(i.textContent="Please fill in all fields."),g?.classList.remove("hidden");return}if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)){i&&(i.textContent="Please enter a valid email address."),g?.classList.remove("hidden");return}g?.classList.add("hidden"),d?.classList.remove("hidden");const l=p.querySelector('button[type="submit"]'),_=l.textContent;l.disabled=!0,l.innerHTML=`
      <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
      Signing in...
    `;try{console.log("Attempting to sign in with Supabase:",t);const{data:o,error:n}=await m.auth.signInWithPassword({email:t,password:u});if(n)throw console.error("Supabase sign in error:",n),n;if(o.user){console.log("User signed in successfully:",o.user.email),sessionStorage.setItem("simple-auth-session",JSON.stringify({user:o.user,access_token:o.session?.access_token,timestamp:Date.now()})),window.dispatchEvent(new CustomEvent("user-logged-in",{detail:o.user})),h&&(h.textContent="Welcome back! Redirecting..."),d?.classList.remove("hidden");const a={id:o.user.id,email:o.user.email,full_name:o.user.email?.split("@")[0]||"User",phone:"Not set",company_name:"Not set",role:"customer"};console.log("🔐 Login: Created initial user data:",a),window.dispatchEvent(new CustomEvent("user-logged-in",{detail:a})),m.from("profiles").select("role, status, full_name, phone, company_name").eq("id",o.user.id).single().then(({data:r,error:y})=>{if(!y&&r){console.log("✅ User profile loaded:",r);const f={...a,full_name:r.full_name||a.full_name,phone:r.phone||a.phone,company_name:r.company_name||a.company_name,role:r.role||a.role};console.log("🔄 Login: Updated user data with profile:",f),console.log("👑 User role after profile update:",f.role),window.dispatchEvent(new CustomEvent("user-logged-in",{detail:f}))}else console.warn("⚠️ Login: Profile fetch failed or no profile data:",y)}).catch(r=>{console.warn("Profile fetch failed (non-critical):",r)}),setTimeout(()=>{window.location.href="/dashboard"},800)}else throw new Error("Sign in failed - no user data returned")}catch(o){console.error("Login error:",o);let n="An error occurred during sign in.";o.message&&(o.message.includes("Invalid login credentials")?n="Invalid email or password. Please try again.":o.message.includes("Email not confirmed")?n="Please check your email and confirm your account before signing in.":o.message.includes("Too many requests")?n="Too many login attempts. Please try again later.":n=o.message),i&&(i.textContent=n),g?.classList.remove("hidden"),l.disabled=!1,l.textContent=_}});
