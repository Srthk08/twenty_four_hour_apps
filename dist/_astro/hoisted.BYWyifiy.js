import"./ProductDialog.astro_astro_type_script_index_0_lang.BQOC59sz.js";import"https://unpkg.com/@supabase/supabase-js@2";document.querySelectorAll(".faq-button").forEach(o=>{o.addEventListener("click",()=>{const t=o.nextElementSibling,e=o.querySelector("svg");t.classList.toggle("hidden"),e.classList.toggle("rotate-180")})});window.redirectToCart=function(o,t){console.log("🛒 redirectToCart called with:",{productId:o,price:t});const e=window.globalAuthManager||window.simpleAuthManager;if(console.log("🔍 Auth manager found:",!!e),e&&e.isUserLoggedIn()){console.log("✅ User authenticated, redirecting to dashboard");const n=`/dashboard?product=${o}&price=${t}`;console.log("🔗 Redirecting to:",n),window.location.href=n}else{console.log("❌ User not authenticated, redirecting to login");const n=`/login?redirect=/dashboard?product=${o}&price=${t}`;console.log("🔗 Redirecting to:",n),window.location.href=n}};function s(){console.log("Checking authentication status...");const o=()=>{const t=window.globalAuthManager||window.simpleAuthManager;if(t)if(console.log("✅ Auth manager found, checking status..."),t.isUserLoggedIn()){console.log("✅ User is authenticated, hiding login prompt");const e=document.getElementById("login-prompt");e&&(e.classList.add("hidden"),console.log("Login prompt hidden"));const n=document.getElementById("add-to-cart-btn");n&&(n.classList.remove("hidden"),console.log("Add to cart button shown"))}else{console.log("❌ User is not authenticated, showing login prompt");const e=document.getElementById("login-prompt");e&&(e.classList.remove("hidden"),console.log("Login prompt shown"));const n=document.getElementById("add-to-cart-btn");n&&(n.classList.add("hidden"),console.log("Add to cart button hidden"))}else console.log("⏳ Auth manager not ready, retrying..."),setTimeout(o,100)};o()}document.addEventListener("DOMContentLoaded",s);document.addEventListener("DOMContentLoaded",function(){const t=window.location.pathname.split("/").pop();if(console.log("Product page loaded:",t),t==="order-menu-system"){console.log("OMS product page - no restrictions applied, ensuring dialog is hidden");const n=document.getElementById("product-dialog");n&&n.classList.add("hidden");return}const e=r();console.log("Is admin:",e),e?console.log("Admin user - no restrictions"):(console.log("Non-admin user - showing dialog"),window.showProductDialog?window.showProductDialog():(console.log("Dialog not available - redirecting to contact"),window.location.href="/contact"))});function r(){try{if(window.globalAuthManager&&window.globalAuthManager.isUserLoggedIn()){const e=window.globalAuthManager.getCurrentUser();if(e&&e.role==="admin")return!0}if(window.simpleAuthManager&&window.simpleAuthManager.isUserLoggedIn()){const e=window.simpleAuthManager.getCurrentUser();if(e&&e.role==="admin")return!0}const o=sessionStorage.getItem("simple-auth-session");if(o)try{const e=JSON.parse(o);if(e.user&&e.user.role==="admin")return!0}catch(e){console.log("Session data parse error:",e)}const t=localStorage.getItem("simple-auth-session");if(t)try{const e=JSON.parse(t);if(e.user&&e.user.role==="admin")return!0}catch(e){console.log("Local session data parse error:",e)}return!1}catch(o){return console.error("Error checking admin status:",o),!1}}window.addEventListener("user-logged-in",o=>{console.log("✅ User logged in event received, updating UI..."),s()});window.addEventListener("user-logged-out",()=>{console.log("❌ User logged out event received, updating UI..."),s()});const i=new IntersectionObserver(o=>{o.forEach(t=>{t.isIntersecting&&t.target.classList.add("animate-fade-in")})});document.querySelectorAll(".animate-fade-in").forEach(o=>{i.observe(o)});document.addEventListener("DOMContentLoaded",()=>{document.querySelectorAll(".contact-us-btn").forEach(t=>{t.addEventListener("mouseenter",function(){this.style.color="#000000",this.style.backgroundColor="white"}),t.addEventListener("mouseleave",function(){this.style.color="white",this.style.backgroundColor="transparent"})})});
