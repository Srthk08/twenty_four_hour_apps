import{c as f}from"./index.BFAZBQoJ.js";const c={ASSETS_PREFIX:void 0,BASE_URL:"/",DEV:!1,MODE:"production",PROD:!0,SITE:void 0,SSR:!1};var l={};const h={url:"https://lmrrdcaavwwletcjcpqv.supabase.co",anonKey:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxtcnJkY2Fhdnd3bGV0Y2pjcHF2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU1MDQ0ODgsImV4cCI6MjA3MTA4MDQ4OH0.AU59Qfr6K9i880Gcn5y-3pjCf8PXsDIq4OI0-lPQVuQ"},d=n=>typeof import.meta<"u"&&c&&c[n]?c[n]:typeof process<"u"&&l&&l[n]?l[n]:typeof window<"u"&&window.__ENV__&&window.__ENV__[n]?window.__ENV__[n]:"",g=d("VITE_SUPABASE_URL")||h.url,w=d("VITE_SUPABASE_ANON_KEY")||h.anonKey;console.log("Environment Detection:",{hasImportMeta:typeof import.meta<"u",hasProcess:typeof process<"u",hasWindow:typeof window<"u",importMetaEnv:typeof import.meta<"u"?Object.keys(c||{}):"N/A",processEnv:typeof process<"u"?Object.keys(l||{}).filter(n=>n.includes("SUPABASE")):"N/A"});console.log("Supabase Configuration:",{url:"✅ Set",key:"✅ Set",source:d("VITE_SUPABASE_URL")?"Environment Variables":"Hardcoded Config"});const s=f(g,w);class a{constructor(){this.currentUser=null,this.currentSession=null,this.initializeAuth()}static getInstance(){return a.instance||(a.instance=new a),a.instance}async initializeAuth(){try{const{data:{session:r}}=await s.auth.getSession();r&&(this.currentSession=r,await this.loadUserProfile(r.user.id)),s.auth.onAuthStateChange(async(t,e)=>{console.log("Auth state changed:",t,e?.user?.email),t==="SIGNED_IN"&&e?(this.currentSession=e,await this.loadUserProfile(e.user.id),this.dispatchAuthEvent("auth-state-changed")):t==="SIGNED_OUT"?(this.currentUser=null,this.currentSession=null,this.dispatchAuthEvent("auth-state-changed")):t==="TOKEN_REFRESHED"&&e&&(this.currentSession=e,await this.loadUserProfile(e.user.id))})}catch(r){console.error("Error initializing auth:",r)}}async loadUserProfile(r){try{const{data:t,error:e}=await s.from("profiles").select("*").eq("id",r).single();if(e){console.error("Error loading user profile:",e);return}this.currentUser=t,console.log("User profile loaded:",t.email)}catch(t){console.error("Error in loadUserProfile:",t)}}dispatchAuthEvent(r){typeof window<"u"&&window.dispatchEvent(new CustomEvent(r))}async signUp(r,t,e){try{console.log("Signing up user:",r);const{data:o,error:i}=await s.auth.signUp({email:r,password:t,options:{data:{full_name:e.full_name,phone:e.phone,company_name:e.company_name}}});if(i)throw console.error("Auth signup error:",i),i;if(o.user){console.log("User created in auth:",o.user.id);const{error:u}=await s.from("profiles").insert({id:o.user.id,email:r,full_name:e.full_name||"",phone:e.phone||"",company_name:e.company_name||"",role:e.role||"customer",status:"pending_verification",username:e.username||e.full_name?.toLowerCase().replace(/\s+/g,"_"),created_at:new Date().toISOString(),updated_at:new Date().toISOString()});if(u)throw console.error("Profile creation error:",u),await s.auth.admin.deleteUser(o.user.id),u;return await this.logUserActivity(o.user.id,"user_signup",{email:r,full_name:e.full_name}),console.log("User profile created successfully"),o}throw new Error("Failed to create user")}catch(o){throw console.error("Signup error:",o),o}}async signIn(r,t){try{console.log("Signing in user:",r);const{data:e,error:o}=await s.auth.signInWithPassword({email:r,password:t});if(o)throw console.error("Sign in error:",o),o;if(e.user)return console.log("User signed in:",e.user.email),await this.loadUserProfile(e.user.id),await this.updateLoginInfo(e.user.id),await this.logUserActivity(e.user.id,"user_login",{email:r,ip_address:await this.getClientIP()}),this.dispatchAuthEvent("auth-state-changed"),e;throw new Error("Sign in failed")}catch(e){throw console.error("Sign in error:",e),e}}async signOut(){try{this.currentUser&&await this.logUserActivity(this.currentUser.id,"user_logout",{email:this.currentUser.email});const{error:r}=await s.auth.signOut();if(r)throw console.error("Sign out error:",r),r;this.currentUser=null,this.currentSession=null,this.dispatchAuthEvent("auth-state-changed"),console.log("User signed out successfully")}catch(r){throw console.error("Sign out error:",r),r}}async getCurrentUser(){try{if(this.currentUser)return this.currentUser;const{data:{user:r}}=await s.auth.getUser();return r?(await this.loadUserProfile(r.id),this.currentUser):null}catch(r){return console.error("Error getting current user:",r),null}}async isAuthenticated(){try{const{data:{session:r}}=await s.auth.getSession();return!!r}catch(r){return console.error("Error checking authentication:",r),!1}}async updateProfile(r){try{const{data:{user:t}}=await s.auth.getUser();if(!t)throw new Error("No authenticated user");console.log("Updating profile for user:",t.email);const{data:e,error:o}=await s.from("profiles").update({...r,updated_at:new Date().toISOString()}).eq("id",t.id).select().single();if(o)throw console.error("Profile update error:",o),o;return this.currentUser=e,await this.logUserActivity(t.id,"profile_updated",{updated_fields:Object.keys(r)}),console.log("Profile updated successfully"),e}catch(t){throw console.error("Profile update error:",t),t}}async changePassword(r,t){try{const{data:{user:e}}=await s.auth.getUser();if(!e)throw new Error("No authenticated user");console.log("Changing password for user:",e.email);const{error:o}=await s.auth.updateUser({password:t});if(o)throw console.error("Password change error:",o),o;await this.logUserActivity(e.id,"password_changed",{email:e.email}),console.log("Password changed successfully")}catch(e){throw console.error("Password change error:",e),e}}async resetPassword(r){try{console.log("Sending password reset for:",r);const{error:t}=await s.auth.resetPasswordForEmail(r,{redirectTo:`${window.location.origin}/reset-password`});if(t)throw console.error("Password reset error:",t),t;console.log("Password reset email sent")}catch(t){throw console.error("Password reset error:",t),t}}async getUserProfile(r){try{const{data:t,error:e}=await s.from("profiles").select("*").eq("id",r).single();return e?(console.error("Error fetching user profile:",e),null):t}catch(t){return console.error("Error in getUserProfile:",t),null}}async getAllUsers(){try{const{data:r,error:t}=await s.from("profiles").select("*").order("created_at",{ascending:!1});if(t)throw console.error("Error fetching all users:",t),t;return r||[]}catch(r){throw console.error("Error in getAllUsers:",r),r}}async logUserActivity(r,t,e={}){try{const{error:o}=await s.from("user_activity_log").insert({user_id:r,action:t,details:e,ip_address:await this.getClientIP(),user_agent:navigator.userAgent});o&&console.error("Error logging user activity:",o)}catch(o){console.error("Error in logUserActivity:",o)}}async updateLoginInfo(r){try{const{data:t}=await s.from("profiles").select("login_count").eq("id",r).single(),o=(t?.login_count||0)+1,{error:i}=await s.from("profiles").update({last_login_at:new Date().toISOString(),login_count:o,updated_at:new Date().toISOString()}).eq("id",r);i&&console.error("Error updating login info:",i)}catch(t){console.error("Error in updateLoginInfo:",t)}}async getClientIP(){try{return"127.0.0.1"}catch{return null}}async getUserDashboardData(){try{const{data:{user:r}}=await s.auth.getUser();if(!r)throw new Error("No authenticated user");const{data:t,error:e}=await s.from("user_dashboard_data").select("*").eq("id",r.id).single();if(e)throw console.error("Error fetching dashboard data:",e),e;return t}catch(r){throw console.error("Error in getUserDashboardData:",r),r}}async getUserSessions(){try{const{data:{user:r}}=await s.auth.getUser();if(!r)throw new Error("No authenticated user");const{data:t,error:e}=await s.from("user_sessions").select("*").eq("user_id",r.id).order("created_at",{ascending:!1});if(e)throw console.error("Error fetching user sessions:",e),e;return t||[]}catch(r){throw console.error("Error in getUserSessions:",r),r}}async getUserActivityLog(r=50){try{const{data:{user:t}}=await s.auth.getUser();if(!t)throw new Error("No authenticated user");const{data:e,error:o}=await s.from("user_activity_log").select("*").eq("user_id",t.id).order("created_at",{ascending:!1}).limit(r);if(o)throw console.error("Error fetching user activity log:",o),o;return e||[]}catch(t){throw console.error("Error in getUserActivityLog:",t),t}}}a.getInstance();export{a as SupabaseAuth,s as supabase,w as supabaseAnonKey,g as supabaseUrl};
