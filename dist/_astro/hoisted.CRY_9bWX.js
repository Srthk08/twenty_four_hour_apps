const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["_astro/supabase.C3b_eKiV.js","_astro/index.BymsOcZI.js","_astro/preload-helper.CLcXU_4U.js"])))=>i.map(i=>d[i]);
import{_ as p}from"./preload-helper.CLcXU_4U.js";import"./Toast.astro_astro_type_script_index_0_lang.DWdVrimQ.js";import"https://unpkg.com/@supabase/supabase-js@2";import"./AuthGuard.astro_astro_type_script_index_0_lang.D4Znhmp3.js";console.log("Dashboard loaded - using global auth manager");async function f(e){try{console.log("🔍 Fetching user profile from Supabase for user:",e);const{supabase:a}=await p(async()=>{const{supabase:s}=await import("./supabase.C3b_eKiV.js");return{supabase:s}},__vite__mapDeps([0,1,2])),{data:u,error:l}=await a.from("profiles").select("*").eq("id",e).single();return l?(console.error("Error fetching user profile:",l),null):(console.log("✅ User profile fetched from Supabase:",u),u)}catch(a){return console.error("Error in fetchUserProfile:",a),null}}async function n(){console.log("🔄 Updating user info...");let e=null,a="";const u=[{key:"simple-auth-session",storage:sessionStorage,path:"user"},{key:"simple-auth-user",storage:localStorage,path:null},{key:"simple-auth-session",storage:localStorage,path:"user"}];for(const t of u)try{const o=t.storage.getItem(t.key);if(o){const r=JSON.parse(o);if(e=t.path?r[t.path]:r,e&&e.email){a=t.key,console.log(`✅ Found user data in ${t.key}:`,e.email);break}}}catch(o){console.log(`Error reading ${t.key}:`,o)}if(!e){console.log("No stored user data found, checking URL...");const t=new URLSearchParams(window.location.search),o=t.get("email")||"user@example.com",r=t.get("name")||"User";e={email:o,full_name:r,phone:"Not set",company_name:"Not set"},a="URL parameters",console.log("Using fallback data:",e)}if(e){if(e.user_metadata&&(e.full_name=e.user_metadata.full_name||e.full_name,e.phone=e.user_metadata.phone||e.phone,e.company_name=e.user_metadata.company_name||e.company_name),e.id&&(!e.full_name||e.full_name==="User"||!e.phone||e.phone==="Not set")){console.log("🔄 Incomplete user data, fetching from Supabase...");try{const t=await f(e.id);t&&(e={...e,...t,email:e.email||t.email},console.log("✅ Enhanced user data with profile:",e))}catch(t){console.log("Error fetching profile data:",t)}}e.full_name=e.full_name||e.fullName||"User",e.phone=e.phone||"Not set",e.company_name=e.company_name||e.companyName||"Not set",e.email=e.email||"user@example.com",console.log("📋 Final normalized user data:",e)}const l=document.getElementById("user-email"),s=document.getElementById("user-full-name"),m=document.getElementById("user-phone"),c=document.getElementById("user-company");console.log("🔍 DOM Elements found:"),console.log("userEmail:",l),console.log("userFullName:",s),console.log("userPhone:",m),console.log("userCompany:",c),l?(console.log("📧 Before update - Email element text:",l.textContent),l.textContent=e.email||"Not set",console.log("📧 After update - Email element text:",l.textContent),console.log("📧 Email updated to:",e.email)):console.log("❌ userEmail element not found!"),s?(console.log("👤 Before update - Name element text:",s.textContent),s.textContent=e.full_name||e.fullName||"Not set",console.log("👤 After update - Name element text:",s.textContent),console.log("👤 Name updated to:",e.full_name||e.fullName)):console.log("❌ userFullName element not found!"),m?(console.log("📞 Before update - Phone element text:",m.textContent),m.textContent=e.phone||"Not set",console.log("📞 After update - Phone element text:",m.textContent),console.log("📞 Phone updated to:",e.phone)):console.log("❌ userPhone element not found!"),c?(console.log("🏢 Before update - Company element text:",c.textContent),c.textContent=e.company_name||e.companyName||"Not set",console.log("🏢 After update - Company element text:",c.textContent),console.log("🏢 Company updated to:",e.company_name||e.companyName)):console.log("❌ userCompany element not found!");const d=document.getElementById("user-welcome");if(d){const t=e.full_name||e.fullName||e.email?.split("@")[0]||"User";d.textContent=t,console.log("👋 Welcome message updated to:",t)}console.log(`✅ Dashboard updated successfully from ${a}`),setTimeout(()=>{console.log("🔄 Force update attempt...");const t=document.querySelectorAll("#user-email, #user-full-name, #user-phone, #user-company, #user-welcome");console.log("Found elements with querySelectorAll:",t.length),t.forEach((o,r)=>{if(console.log(`Element ${r}:`,o.id,o.textContent),o.id==="user-email")o.textContent=e.email||"Not set",console.log("Force updated email to:",o.textContent);else if(o.id==="user-full-name")o.textContent=e.full_name||e.fullName||"Not set",console.log("Force updated name to:",o.textContent);else if(o.id==="user-phone")o.textContent=e.phone||"Not set",console.log("Force updated phone to:",o.textContent);else if(o.id==="user-company")o.textContent=e.company_name||e.companyName||"Not set",console.log("Force updated company to:",o.textContent);else if(o.id==="user-welcome"){const g=e.full_name||e.fullName||e.email?.split("@")[0]||"User";o.textContent=g,console.log("Force updated welcome to:",o.textContent)}})},100)}document.addEventListener("DOMContentLoaded",()=>{console.log("Dashboard DOM loaded - initializing with global auth manager"),n(),setTimeout(()=>n(),100),setTimeout(()=>n(),500),setTimeout(()=>n(),1e3),setTimeout(()=>n(),2e3)});window.addEventListener("load",()=>{console.log("Window loaded - trying again"),n()});let i=0;const h=5,y=setInterval(()=>{i++,console.log(`Attempt ${i} to load user data...`),n(),i>=h&&(clearInterval(y),console.log("Max attempts reached"))},2e3);window.addEventListener("user-logged-in",()=>{console.log("User logged in event received in dashboard"),n()});window.addEventListener("user-logged-out",()=>{console.log("User logged out event received in dashboard"),n()});const x=document.getElementById("logout-btn");x?.addEventListener("click",()=>{console.log("Logout clicked - using global auth manager");const e=window.globalAuthManager||window.simpleAuthManager;e?e.logout():window.location.href="/"});console.log("✅ Dashboard script initialized with global auth manager");
