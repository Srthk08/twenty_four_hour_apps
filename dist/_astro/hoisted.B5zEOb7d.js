import{supabase as g}from"./supabase.DO6XXPT9.js";import"./ProductDialog.astro_astro_type_script_index_0_lang.BY4S3r1x.js";import"https://unpkg.com/@supabase/supabase-js@2";import"./index.BFAZBQoJ.js";const p=document.getElementById("login-form"),m=document.getElementById("error-message"),l=document.getElementById("error-text"),u=document.getElementById("success-message"),f=document.getElementById("success-text"),b=document.getElementById("google-signin-btn");let y=!1;function c(s,o="info"){f&&(f.textContent=s),u?.classList.remove("hidden"),u?.classList.add(o),o==="success"&&setTimeout(()=>{u?.classList.add("hidden")},3e3)}async function C(){y=!0,sessionStorage.setItem("oauth-google","1");try{c("Connecting to Google...","loading");const{data:s,error:o}=await g.auth.signInWithOAuth({provider:"google",options:{redirectTo:`${window.location.origin}/auth/callback`,queryParams:{access_type:"offline",prompt:"consent"}}});if(o){console.error("Google auth error:",o);let r=o.message;o.message.includes("Provider not found")||o.message.includes("not configured")?r="Google provider not configured. Please contact administrator.":o.message.includes("redirect_uri_mismatch")||o.message.includes("mismatch")?(r=`Redirect URI mismatch. Please add this exact URI to Google Cloud Console: ${window.location.origin}/auth/callback`,console.error("URI Mismatch Details:",{currentOrigin:window.location.origin,expectedRedirect:`${window.location.origin}/auth/callback`,error:o.message,fixInstructions:"Add the exact URI above to Google Cloud Console → APIs & Services → Credentials → OAuth 2.0 Client ID → Authorized redirect URIs"})):o.message.includes("access_denied")&&(r="Access denied. Please try again."),c(`Authentication failed: ${r}`,"error");return}c("Redirecting to Google...","loading")}catch(s){console.error("Google auth error:",s),c(`Authentication failed: ${s.message}`,"error")}}async function E(s){try{const{data:o,error:r}=await g.rpc("sync_google_user",{p_google_id:s.user_metadata.provider_id,p_email:s.email,p_name:s.user_metadata.full_name,p_picture:s.user_metadata.avatar_url,p_provider_id:s.user_metadata.provider_id});if(r){console.error("Sync error:",r);return}return console.log("Google user synced:",o),o}catch(o){console.error("Sync error:",o)}}b?.addEventListener("click",C);g.auth.onAuthStateChange(async(s,o)=>{if(s==="SIGNED_IN"&&o?.user){const r=o.user;if(r.app_metadata.provider==="google"){if(!(y||sessionStorage.getItem("oauth-google")==="1"))return;sessionStorage.removeItem("oauth-google"),c("Syncing Google account...","loading"),await E(r),c("Successfully signed in with Google!","success"),setTimeout(()=>{window.location.href="/dashboard"},1500)}}});p?.addEventListener("submit",async s=>{s.preventDefault();const o=new FormData(p),r=o.get("email"),h=o.get("password");if(!r||!h){l&&(l.textContent="Please fill in all fields."),m?.classList.remove("hidden");return}if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(r)){l&&(l.textContent="Please enter a valid email address."),m?.classList.remove("hidden");return}m?.classList.add("hidden"),u?.classList.remove("hidden");const d=p.querySelector('button[type="submit"]'),_=d.textContent;d.disabled=!0,d.innerHTML=`
      <svg class="animate-spin h-5 w-5 text-white mx-auto" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
      </svg>
    `;try{console.log("Attempting to sign in with Supabase:",r);const{data:t,error:a}=await g.auth.signInWithPassword({email:r,password:h});if(a)throw console.error("Supabase sign in error:",a),a;if(t.user){console.log("User signed in successfully:",t.user.email),sessionStorage.setItem("simple-auth-session",JSON.stringify({user:t.user,access_token:t.session?.access_token,timestamp:Date.now()})),window.dispatchEvent(new CustomEvent("user-logged-in",{detail:t.user})),f&&(f.textContent="Welcome back! Signing you in..."),u?.classList.remove("hidden");const n={id:t.user.id,email:t.user.email,full_name:t.user.email?.split("@")[0]||"User",phone:"Not set",company_name:"Not set",role:"customer"};window.dispatchEvent(new CustomEvent("user-logged-in",{detail:n})),console.log("✅ User data sent to global auth manager:",n);const w=setTimeout(()=>{console.log("⚠️ Fallback redirect triggered - going to dashboard"),window.location.href="/dashboard"},3e3);try{const{data:e,error:v}=await g.from("profiles").select("role, status, full_name, phone, company_name").eq("id",t.user.id).single();let i="/dashboard";!v&&e&&(console.log("✅ User profile found:",e),console.log("🔍 Role value from database:",JSON.stringify(e.role)),e.role==="admin"||e.role==="developer"||e.role==="support"?(i="/admin",console.log(`🎉 ADMIN USER DETECTED: ${e.full_name} (${e.role})`),console.log(`🚀 Redirecting to admin panel: ${i}`)):e.role&&e.role.toLowerCase().trim()==="menu_operator"?(i="/menu-operator",console.log(`🍽️ MENU OPERATOR DETECTED: ${e.full_name} (${e.role})`),console.log(`🚀 Redirecting to menu operator dashboard: ${i}`)):e.status&&e.status==="pending_verification"?(i="/dashboard?message=Please check your email to verify your account.&type=warning",console.log(`⚠️ Customer user with pending verification: ${e.full_name}`)):e.status&&e.status==="suspended"?(i="/dashboard?message=Your account has been suspended. Please contact support.&type=error",console.log(`❌ Customer user suspended: ${e.full_name}`)):(i="/dashboard",console.log(`✅ Customer user: ${e.full_name} (${e.role})`)),console.log(`🎯 Final redirect URL: ${i}`),n.full_name=e.full_name||n.full_name,n.phone=e.phone||n.phone,n.company_name=e.company_name||n.company_name,n.role=e.role||n.role,window.dispatchEvent(new CustomEvent("user-logged-in",{detail:n}))),clearTimeout(w),setTimeout(()=>{window.location.href=i},1e3)}catch(e){console.warn("Could not fetch user profile, using default dashboard:",e),clearTimeout(w),setTimeout(()=>{window.location.href="/dashboard"},1e3)}}else throw new Error("Sign in failed - no user data returned")}catch(t){console.error("Login error:",t);let a="An error occurred during sign in.";t.message&&(t.message.includes("Invalid login credentials")?a="Invalid email or password.":t.message.includes("Email not confirmed")?a="Please check your email and confirm your account before signing in.":t.message.includes("Too many requests")?a="Too many login attempts. Please try again later.":a=t.message),l&&(l.textContent=a),m?.classList.remove("hidden"),d.disabled=!1,d.textContent=_}});
