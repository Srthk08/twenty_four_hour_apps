import"./Footer.astro_astro_type_script_index_0_lang.CYGdQqJr.js";import"https://unpkg.com/@supabase/supabase-js@2";import"./AuthGuard.astro_astro_type_script_index_0_lang.D4Znhmp3.js";console.log("Dashboard loaded - using global auth manager");function n(){console.log("🔄 Updating user info...");let e=null,u="";const d=[{key:"simple-auth-session",storage:sessionStorage,path:"user"},{key:"simple-auth-user",storage:localStorage,path:null},{key:"simple-auth-session",storage:localStorage,path:"user"}];for(const t of d)try{const o=t.storage.getItem(t.key);if(o){const l=JSON.parse(o);if(e=t.path?l[t.path]:l,e&&e.email){u=t.key,console.log(`✅ Found user data in ${t.key}:`,e.email);break}}}catch(o){console.log(`Error reading ${t.key}:`,o)}if(!e){console.log("No stored user data found, checking URL...");const t=new URLSearchParams(window.location.search),o=t.get("email")||"user@example.com",l=t.get("name")||"User";e={email:o,full_name:l,phone:"Not set",company_name:"Not set"},u="URL parameters",console.log("Using fallback data:",e)}const a=document.getElementById("user-email"),s=document.getElementById("user-full-name"),r=document.getElementById("user-phone"),m=document.getElementById("user-company");console.log("🔍 DOM Elements found:"),console.log("userEmail:",a),console.log("userFullName:",s),console.log("userPhone:",r),console.log("userCompany:",m),a?(console.log("📧 Before update - Email element text:",a.textContent),a.textContent=e.email||"Not set",console.log("📧 After update - Email element text:",a.textContent),console.log("📧 Email updated to:",e.email)):console.log("❌ userEmail element not found!"),s?(console.log("👤 Before update - Name element text:",s.textContent),s.textContent=e.full_name||e.fullName||"Not set",console.log("👤 After update - Name element text:",s.textContent),console.log("👤 Name updated to:",e.full_name||e.fullName)):console.log("❌ userFullName element not found!"),r?(console.log("📞 Before update - Phone element text:",r.textContent),r.textContent=e.phone||"Not set",console.log("📞 After update - Phone element text:",r.textContent),console.log("📞 Phone updated to:",e.phone)):console.log("❌ userPhone element not found!"),m?(console.log("🏢 Before update - Company element text:",m.textContent),m.textContent=e.company_name||e.companyName||"Not set",console.log("🏢 After update - Company element text:",m.textContent),console.log("🏢 Company updated to:",e.company_name||e.companyName)):console.log("❌ userCompany element not found!"),console.log(`✅ Dashboard updated successfully from ${u}`),setTimeout(()=>{console.log("🔄 Force update attempt...");const t=document.querySelectorAll("#user-email, #user-full-name, #user-phone, #user-company");console.log("Found elements with querySelectorAll:",t.length),t.forEach((o,l)=>{console.log(`Element ${l}:`,o.id,o.textContent),o.id==="user-email"?(o.textContent=e.email||"Not set",console.log("Force updated email to:",o.textContent)):o.id==="user-full-name"?(o.textContent=e.full_name||e.fullName||"Not set",console.log("Force updated name to:",o.textContent)):o.id==="user-phone"?(o.textContent=e.phone||"Not set",console.log("Force updated phone to:",o.textContent)):o.id==="user-company"&&(o.textContent=e.company_name||e.companyName||"Not set",console.log("Force updated company to:",o.textContent))})},100)}document.addEventListener("DOMContentLoaded",()=>{console.log("Dashboard DOM loaded - initializing with global auth manager"),n(),setTimeout(()=>n(),100),setTimeout(()=>n(),500),setTimeout(()=>n(),1e3),setTimeout(()=>n(),2e3)});window.addEventListener("load",()=>{console.log("Window loaded - trying again"),n()});let c=0;const i=5,g=setInterval(()=>{c++,console.log(`Attempt ${c} to load user data...`),n(),c>=i&&(clearInterval(g),console.log("Max attempts reached"))},2e3);window.addEventListener("user-logged-in",()=>{console.log("User logged in event received in dashboard"),n()});window.addEventListener("user-logged-out",()=>{console.log("User logged out event received in dashboard"),n()});const p=document.getElementById("logout-btn");p?.addEventListener("click",()=>{console.log("Logout clicked - using global auth manager");const e=window.globalAuthManager||window.simpleAuthManager;e?e.logout():window.location.href="/"});console.log("✅ Dashboard script initialized with global auth manager");
